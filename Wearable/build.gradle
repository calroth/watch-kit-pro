buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.1'
        classpath 'com.android.tools.build:gradle:8.1.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation 'androidx.wear:wear:1.3.0'
    implementation 'com.google.android.gms:play-services-wearable:18.0.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    compileOnly 'com.google.android.wearable:wearable:2.9.0'
    implementation 'com.google.android.support:wearable:2.9.0'
    implementation 'net.e175.klaus:solarpositioning:0.0.9'
    implementation 'androidx.annotation:annotation:1.6.0'
}

// https://stackoverflow.com/questions/28498688#35041457
def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitDate = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'show', '-s', '--format=%ci', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().split(" ")[0]
}

android {
    namespace 'pro.watchkit.wearable.watchface'
    compileSdkVersion 33

    defaultConfig {
        // Ref: https://developer.android.com/training/wearables/apps/packaging#specify-a-version-code
        versionCode 330801000
        versionName "8.1"

        resValue "string", "git_hash", "${getGitHash()}"
        resValue "string", "git_date", "${getGitDate()}"
        resValue "string", "version_name", versionName

        minSdkVersion 25 // Wear OS 2.0
        targetSdkVersion 33

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        main {
            java.srcDirs 'src/main/java'
            res.srcDirs 'src/main/res'
        }
    }
    buildFeatures {
        renderScript true
    }
}
