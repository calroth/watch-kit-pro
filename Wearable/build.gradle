
buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
    google()
}



dependencies {

    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.wear:wear:1.0.0'

    implementation 'com.google.android.gms:play-services-wearable:16.0.1'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'

    compileOnly 'com.google.android.wearable:wearable:2.4.0'

    implementation 'com.google.android.support:wearable:2.4.0'
    implementation 'net.e175.klaus:solarpositioning:0.0.9'
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {

    compileSdkVersion 28

    buildToolsVersion "28.0.3"

    defaultConfig {
        versionCode 1
        versionName "1.0"

        minSdkVersion 24

        targetSdkVersion 28

        multiDexEnabled true

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
}
