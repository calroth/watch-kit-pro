/*
 * Copyright (C) 2018-2019 Terence Tan
 *
 *  This file is free software: you may copy, redistribute and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 *
 *  This file is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package pro.watchkit.wearable.watchface.model;

import android.annotation.TargetApi;
import android.graphics.Bitmap;
import android.graphics.BitmapShader;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.ColorSpace;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.RadialGradient;
import android.graphics.Shader;
import android.graphics.SweepGradient;
import android.os.Build;
import android.util.Log;

import java.util.Objects;

import androidx.annotation.ColorInt;
import androidx.annotation.NonNull;

public final class PaintBox {
    public static final int AMBIENT_WHITE =
            Color.argb(0xff, 0xff, 0xff, 0xff);

    private static final float AMBIENT_PAINT_STROKE_WIDTH_PERCENT = 0.333f; // 0.333%
    private static final float PAINT_STROKE_WIDTH_PERCENT = 0.5f; // 0.5%

    private int height = -1, width = -1;
    private float pc = 0f; // percent, set to 0.01f * height, all units are based on percent
    private float mCenterX, mCenterY;

//    private int mFillColor;
//    private int mAccentColor;
//    private int mHighlightColor;
//    private int mBaseColor;

    private Paint mFillPaint;
    private Paint mAccentPaint;
    private Paint mHighlightPaint;
    private Paint mBasePaint;

    private Paint mAmbientPaint;
    private Paint mShadowPaint;

    private GradientPaint mFillHighlightPaint = new GradientPaint();
    private GradientPaint mAccentFillPaint = new GradientPaint(),
            mBezelPaint1,
            mBezelPaint2 = new GradientPaint();
    private GradientPaint mAccentHighlightPaint = new GradientPaint();
    private GradientPaint mBaseAccentPaint = new GradientPaint();
    private WatchFacePreset preset;
    private int mPreviousSerial = -1;

    @ColorInt
    public static int[] colors = {
            0xFF000000, 0xFF1E0F4F, 0xFF230FA3, 0xFF0100FF, 0xFF1E4F17, 0xFF405962, 0xFF4F62AF, 0xFF4F6BFF,
            0xFF24A219, 0xFF4BA971, 0xFF59AFB9, 0xFF54B5FF, 0xFF01FF00, 0xFF38FF79, 0xFF3BFFBE, 0xFF01FFFF,
            0xFF52180A, 0xFF6E1356, 0xFF8007A7, 0xFF8600FF, 0xFF716412, 0xFF886965, 0xFF976EB1, 0xFF9A73FF,
            0xFF85B011, 0xFF97B472, 0xFFA0B7B9, 0xFF9FBBFF, 0xFF8DFF00, 0xFF97FF7A, 0xFF99FFBE, 0xFF90FFFF,
            0xFFA41B0A, 0xFFB90F5B, 0xFFC500AA, 0xFFC600FF, 0xFFBA7407, 0xFFCA7668, 0xFFD378B3, 0xFFD27BFF,
            0xFFC8BA02, 0xFFD3BC72, 0xFFD8BEBA, 0xFFD5C0FF, 0xFFCBFF00, 0xFFD2FF7A, 0xFFD3FFBF, 0xFFCDFFFF,
            0xFFFF0000, 0xFFFF0060, 0xFFFF00AD, 0xFFFF00FF, 0xFFFF7F00, 0xFFFF7F6A, 0xFFFF80B5, 0xFFFF83FF,
            0xFFFFC200, 0xFFFFC273, 0xFFFFC3BB, 0xFFFFC4FF, 0xFFFFFF00, 0xFFFFFF7B, 0xFFFFFFBF, 0xFFFFFFFF,
    };

    public static String[] colorNames = {
            "Black", "Russian Violet", "Zaffre", "Blue", "Mughal Green", "Deep Space Sparkle", "Liberty", "Very Light Blue",
            "Wageningen Green", "Shiny Shamrock", "Moonstone", "Blue Jeans", "Electric Green", "Guppie Green", "Medium Spring Green", "Aqua",
            "French Puce", "Byzantium", "Chinese Purple", "Electric Violet", "Antique Bronze", "Deep Taupe", "Purple Mountain Majesty", "Medium Slate Blue",
            "Apple Green", "Olivine", "Pastel Blue", "Jordy Blue", "Mango Green", "Mint Green", "Aquamarine", "Electric Blue",
            "Rufous", "Rose Red", "Byzantine", "Vivid Orchid", "Philippine Gold", "New York Pink", "Sky Magenta", "Heliotrope",
            "Citrine", "Dark Khaki", "Dust Storm", "Light Pastel Purple", "Electric Lime", "Inchworm", "Granny Smith Apple", "Light Cyan",
            "Red", "Vivid Raspberry", "Fashion Fuchsia", "Fuchsia", "Heat Wave", "Bittersweet", "Cyclamen", "Fuchsia Pink",
            "Amber", "Rajah", "Melon", "Brilliant Lavender", "Yellow", "Sunny", "Very Pale Yellow", "White",
    };
    private String[] wikipediaNames = new String[1494];

    private static Paint newDefaultPaint() {
        Paint result = new Paint();
        result.setStrokeJoin(Paint.Join.ROUND);
        result.setStrokeCap(Paint.Cap.ROUND);
        result.setAntiAlias(true);
//        result.setPathEffect(new CornerPathEffect(3.2f));
        return result;
    }

    private static void generatePalette() {
        if (Build.VERSION.SDK_INT >= 26) {
            int[] i = new int[]{255, 170, 85, 0};
            String[] s = new String[]{"FF", "AA", "55", "00"};
            ColorSpace CIE_LAB = ColorSpace.get(ColorSpace.Named.CIE_LAB);
//            ColorSpace sRGB = ColorSpace.get(ColorSpace.Named.SRGB);
//            ColorSpace.Connector connector =
//                    ColorSpace.connect(sRGB, CIE_LAB, ColorSpace.RenderIntent.PERCEPTUAL);

            StringBuilder sb = new StringBuilder();
            for (int r = 0; r < i.length; r++) {
                for (int g = 0; g < i.length; g++) {
                    for (int b = 0; b < i.length; b++) {
                        long lab = Color.convert(Color.argb(0, i[r], i[g], i[b]), CIE_LAB);

//                        sb.append(String.format("(%d, %d, %d) â†’ (%d, %d, %d)",
//                                r, g, b,
//                                (int)Color.red(lab), (int)Color.green(lab), (int)Color.blue(lab)
//                                ));

                        sb.append(String.format("{\"group\": \"#%s%s%s\", \"x\": %d, \"y\": %d, \"z\": %d},",
                                s[r], s[g], s[b], (int) Color.red(lab), (int) Color.green(lab), (int) Color.blue(lab)
                        ));
                        sb.append(System.lineSeparator());
                    }
                }
                android.util.Log.d("AnalogWatchFace", sb.toString());
                sb.setLength(0);
            }
        }
    }

//    public Paint getAccentHighlightPaint() {
//        regeneratePaints2();
//        return mAccentHighlightPaint;
//    }
//
//    public Paint getBaseAccentPaint() {
//        regeneratePaints2();
//        return mBaseAccentPaint;
//    }

//    public Paint getTickPaint() {
//        regeneratePaints2();
//        return mTickPaint;
//    }

//    public Paint getBackgroundPaint() {
//        regeneratePaints2();
//        return mBackgroundPaint;
//    }

    //    private Paint mHandPaint;
//    private Paint mTickPaint;
//    private Paint mBackgroundPaint;

    private static void generatePalette1() {
        if (Build.VERSION.SDK_INT >= 26) {
            float[] ls = new float[]{100f, 75f, 50f, 25f, 0f};
//            float [] as = new float[] {-128f, -64f, 0f, 64f, 128f};
//            float [] bs = new float[] {-128f, -64f, 0f, 64f, 128f};
            float[] bs = new float[]{128f, 96f, 64f, 32f, 0f, -32f, -64f, -96f, -128f};
            float[] as = new float[]{-128f, -96f, -64f, -32f, 0f, 32f, 64f, 96f, 128f};

            ColorSpace CIE_LAB = ColorSpace.get(ColorSpace.Named.CIE_LAB);
            ColorSpace.Connector connector =
                    ColorSpace.connect(CIE_LAB, ColorSpace.RenderIntent.PERCEPTUAL);

            for (int lc = 0; lc < ls.length; lc++) {
                StringBuilder sb = new StringBuilder();
                for (int bc = 0; bc < bs.length; bc++) {
                    sb.append("<div>").append(System.lineSeparator()).append("    ");
                    for (int ac = 0; ac < as.length; ac++) {
                        float[] f = connector.transform(ls[lc], as[ac], bs[bc]);
                        int r = Color.toArgb(Color.pack(f[0], f[1], f[2]));
//                        Color c = Color.valueOf(ls[lc], as[ac], bs[bc], 0f, CIE_LAB);
//                        int r = Color.toArgb(Color.convert(c.pack(), connector));
                        sb.append("<div class=\"A\" style=\"background-color: ");
                        sb.append(String.format("#%06X", (0xFFFFFF & r)));
                        sb.append("\"></div>");
                    }
                    sb.append("</div>").append(System.lineSeparator());

                    android.util.Log.d("AnalogWatchFace", sb.toString());
                    sb.setLength(0);
                }
                sb.append("<div><hr></div>").append(System.lineSeparator());
                android.util.Log.d("AnalogWatchFace", sb.toString());
            }
        }
    }

    /**
     * Given two colors A and B, return an intermediate color between the two. The distance
     * between the two is given by "d"; 1.0 means return "colorA", 0.0 means return "colorB",
     * 0.5 means return something evenly between the two.
     * <p>
     * For SDK 26 (Android O) and above, the calculation is done in the LAB color space for
     * extra perceptual accuracy!
     *
     * @param colorA One color to calculate
     * @param colorB The other color
     * @param d      The distance from colorB, between 0.0 and 1.0
     * @return A color between colorA and colorB
     */
    static int getIntermediateColor(int colorA, int colorB, double d) {
        // Clamp to [0, 1]
        if (d < 0) d = 0;
        else if (d > 1) d = 1;
        double e = 1d - d;

        // The "long colors" feature is only available in SDK 26 onwards!
        if (Build.VERSION.SDK_INT >= 26) {
            ColorSpace CIE_LAB = ColorSpace.get(ColorSpace.Named.CIE_LAB);
            ColorSpace sRGB = ColorSpace.get(ColorSpace.Named.SRGB);

            // Convert colors to LAB color space.
            long colorAL = Color.convert(colorA, CIE_LAB);
            long colorBL = Color.convert(colorB, CIE_LAB);

            // Generate a new color that is between the two.
            float a = (float) (Color.alpha(colorAL) * d + Color.alpha(colorBL) * e);
            float r = (float) (Color.red(colorAL) * d + Color.red(colorBL) * e);
            float g = (float) (Color.green(colorAL) * d + Color.green(colorBL) * e);
            float b = (float) (Color.blue(colorAL) * d + Color.blue(colorBL) * e);

            // Convert back to sRGB and return.
            return Color.toArgb(Color.convert(r, g, b, a, CIE_LAB, sRGB));
        } else {
            // Generate a new color that is between the two.
            int a = (int) (Color.alpha(colorA) * d + Color.alpha(colorB) * e);
            int r = (int) (Color.red(colorA) * d + Color.red(colorB) * e);
            int g = (int) (Color.green(colorA) * d + Color.green(colorB) * e);
            int b = (int) (Color.blue(colorA) * d + Color.blue(colorB) * e);

            // And return
            return Color.argb(a, r, g, b);
        }
    }

    public Paint getAmbientPaint() {
        regeneratePaints2();
        return mAmbientPaint;
    }

//    public void setPalette(WatchFacePreset preset) {
//        this.mFillColor = preset.getFillColor();
//        this.mAccentColor = preset.getAccentColor();
//        this.mHighlightColor = preset.getHighlightColor();
//        this.mBaseColor = preset.getBaseColor();
//
//        regeneratePaints();
//    }

    public Paint getShadowPaint() {
        regeneratePaints2();
        return mShadowPaint;
    }

//    private void regeneratePaints() {
//        if (width <= 0 || height <= 0)
//            return;
//
//        mFillPaint.setColor(mFillColor);
//        mAccentPaint.setColor(mAccentColor);
//        mHighlightPaint.setColor(mHighlightColor);
//        mBasePaint.setColor(mBaseColor);
//
//        mFillHighlightPaint.setColors(mFillColor, mHighlightColor, WatchFacePreset.GradientStyle.RADIAL_BRUSHED);
//        mAccentFillPaint.setColors(mAccentColor, mFillColor, WatchFacePreset.GradientStyle.SWEEP);
//        mBezelPaint2.setColors(mFillColor, mAccentColor, WatchFacePreset.GradientStyle.SWEEP);
//        mAccentHighlightPaint.setColors(mAccentColor, mHighlightColor, WatchFacePreset.GradientStyle.SWEEP);
//        mBaseAccentPaint.setColors(mBaseColor, mAccentColor, WatchFacePreset.GradientStyle.SWEEP_BRUSHED);
//
//        mTickPaint = mAccentHighlightPaint;
//        mBackgroundPaint = mBaseAccentPaint;
//        // TODO: make the above only trigger when the colors actually change.
//        // TODO: actually, just hook it up to the WatchFacePreset code...
//    }

    public Paint getFillHighlightPaint() {
        regeneratePaints2();
        return mFillHighlightPaint;
    }

    public Paint getBezelPaint1() {
        regeneratePaints2();
        return mBezelPaint1;
    }

    public Paint getBezelPaint2() {
        regeneratePaints2();
        return mBezelPaint2;
    }

    public void onWidthAndHeightChanged(int width, int height) {
        if (this.width == width && this.height == height) {
            return;
        }

        this.width = width;
        this.height = height;
        pc = 0.01f * height;
        mCenterX = width / 2f;
        mCenterY = height / 2f;

//            /*
//             * Calculate lengths of different hands based on watch screen size.
//             */
//            mSecondHandLength = 43.75f * pc; // 43.75%
//            mMinuteHandLength = 37.5f * pc; // 37.5%
//            mHourHandLength = 25f * pc; // 25%
//            // I changed my mind...
//            mSecondHandLength = 45f * pc; // 45%
//            mMinuteHandLength = 40f * pc; // 40%
//            mHourHandLength = 30f * pc; // 30%

//        // Regenerate stroke widths based on value of "percent"
//        mFillHighlightPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
//        mAccentFillPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
//        mBezelPaint2.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
//        mAccentHighlightPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
//        mBaseAccentPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
//        mAmbientPaint.setStrokeWidth(AMBIENT_PAINT_STROKE_WIDTH_PERCENT * pc);
//
//        regeneratePaints();
    }

    private void regeneratePaints2() {
        // Invalidate if our preset has changed.
        int currentSerial = Objects.hash(
                preset.getFillColor(),
                preset.getAccentColor(),
                preset.getHighlightColor(),
                preset.getBaseColor(),
                preset.getFillHighlightStyle(),
                preset.getAccentFillStyle(),
                preset.getAccentHighlightStyle(),
                preset.getBaseAccentStyle(),
                pc);
        if (mPreviousSerial == currentSerial || width <= 0 || height <= 0) {
            return;
        }
//        android.util.Log.d("AnalogWatchFace", String.format("BigInvalidated! Serial: Old: %d, New: %d", mPreviousSerial, currentSerial));

        mPreviousSerial = currentSerial;

        mFillPaint.setColor(preset.getFillColor());
        mAccentPaint.setColor(preset.getAccentColor());
        mHighlightPaint.setColor(preset.getHighlightColor());
        mBasePaint.setColor(preset.getBaseColor());

        mFillHighlightPaint.setColors(preset.getFillColor(), preset.getHighlightColor(), preset.getFillHighlightStyle());
        mAccentFillPaint.setColors(preset.getAccentColor(), preset.getFillColor(), preset.getAccentFillStyle());
        mBezelPaint1 = mAccentFillPaint;
        mBezelPaint2.setColors(preset.getFillColor(), preset.getAccentColor(), preset.getAccentFillStyle());
        mAccentHighlightPaint.setColors(preset.getAccentColor(), preset.getHighlightColor(), preset.getAccentHighlightStyle());
        mBaseAccentPaint.setColors(preset.getBaseColor(), preset.getAccentColor(), preset.getBaseAccentStyle());

//        mTickPaint = mAccentHighlightPaint;
//        mBackgroundPaint = mBaseAccentPaint;
        mShadowPaint.setColor(preset.getBaseColor());

        // Regenerate stroke widths based on value of "percent"
        mFillHighlightPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
        mAccentFillPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
        mBezelPaint2.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
        mAccentHighlightPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
        mBaseAccentPaint.setStrokeWidth(PAINT_STROKE_WIDTH_PERCENT * pc);
        mAmbientPaint.setStrokeWidth(AMBIENT_PAINT_STROKE_WIDTH_PERCENT * pc);
    }

    private Tuple generateMidPoint(Tuple a1, Tuple b1, float d) {
        float e = 1f - d;
        float a = (a1.a * e) + (b1.a * d);
        float b = (a1.b * e) + (b1.b * d);
        float c = (a1.c * e) + (b1.c * d);
        float x = (a1.x * e) + (b1.x * d);
        float y = (a1.y * e) + (b1.y * d);
        float z = (a1.z * e) + (b1.z * d);
        return new Tuple(Math.round(a), Math.round(b), Math.round(c), x, y, z);
    }

    private Tuple generateMidPoint(Tuple a1, Tuple b1, float d1, Tuple a2, Tuple b2, float d2) {
        Tuple t1 = generateMidPoint(a1, b1, d1);
        Tuple t2 = generateMidPoint(a2, b2, d2);
        if (t1.a != t2.a || t2.b != t2.b || t1.c != t2.c) {
            android.util.Log.d("AnalogWatchFace", String.format("Error: (%d, %d, %d) != (%d, %d, %d)", t1.a, t1.b, t1.c, t2.a, t2.b, t2.c));
        }
        return generateMidPoint(t1, t2, 0.5f);
    }

    private Tuple generateMidPoint(Tuple a1, Tuple b1, float d1, Tuple a2, Tuple b2, float d2, Tuple a3, Tuple b3, float d3) {
        Tuple t1 = generateMidPoint(a1, b1, d1);
        Tuple t2 = generateMidPoint(a2, b2, d2);
        Tuple t3 = generateMidPoint(a3, b3, d3);
        return new Tuple(t1.a, t1.b, t1.c,
                (t1.x + t2.x + t3.x) / 3f,
                (t1.y + t2.y + t3.y) / 3f,
                (t1.z + t2.z + t3.z) / 3f);
    }

    private void generateTuples() {
        if (Build.VERSION.SDK_INT < 26) return;

        Tuple t333 = new Tuple(3, 3, 3).log();
        Tuple t330 = new Tuple(3, 3, 0).log();
        Tuple t303 = new Tuple(3, 0, 3).log();
        Tuple t300 = new Tuple(3, 0, 0).log();
        Tuple t033 = new Tuple(0, 3, 3).log();
        Tuple t030 = new Tuple(0, 3, 0).log();
        Tuple t003 = new Tuple(0, 0, 3).log();
        Tuple t000 = new Tuple(0, 0, 0).log();

        // Edges
        Tuple t331 = generateMidPoint(t330, t333, 0.333333f).log();
        Tuple t332 = generateMidPoint(t330, t333, 0.666667f).log();
        Tuple t313 = generateMidPoint(t303, t333, 0.333333f).log();
        Tuple t323 = generateMidPoint(t303, t333, 0.666667f).log();
        Tuple t301 = generateMidPoint(t300, t303, 0.333333f).log();
        Tuple t302 = generateMidPoint(t300, t303, 0.666667f).log();
        Tuple t310 = generateMidPoint(t300, t330, 0.333333f).log();
        Tuple t320 = generateMidPoint(t300, t330, 0.666667f).log();

        Tuple t031 = generateMidPoint(t030, t033, 0.333333f).log();
        Tuple t032 = generateMidPoint(t030, t033, 0.666667f).log();
        Tuple t013 = generateMidPoint(t003, t033, 0.333333f).log();
        Tuple t023 = generateMidPoint(t003, t033, 0.666667f).log();
        Tuple t001 = generateMidPoint(t000, t003, 0.333333f).log();
        Tuple t002 = generateMidPoint(t000, t003, 0.666667f).log();
        Tuple t010 = generateMidPoint(t000, t030, 0.333333f).log();
        Tuple t020 = generateMidPoint(t000, t030, 0.666667f).log();

        Tuple t133 = generateMidPoint(t033, t333, 0.333333f).log();
        Tuple t130 = generateMidPoint(t030, t330, 0.333333f).log();
        Tuple t103 = generateMidPoint(t003, t303, 0.333333f).log();
        Tuple t100 = generateMidPoint(t000, t300, 0.333333f).log();
        Tuple t233 = generateMidPoint(t033, t333, 0.666667f).log();
        Tuple t230 = generateMidPoint(t030, t330, 0.666667f).log();
        Tuple t203 = generateMidPoint(t003, t303, 0.666667f).log();
        Tuple t200 = generateMidPoint(t000, t300, 0.666667f).log();

        // Faces
        Tuple t311 = generateMidPoint(t310, t313, 0.333333f, t301, t331, 0.333333f).log();
        Tuple t312 = generateMidPoint(t310, t313, 0.666667f, t302, t332, 0.333333f).log();
        Tuple t321 = generateMidPoint(t320, t323, 0.333333f, t301, t331, 0.666667f).log();
        Tuple t322 = generateMidPoint(t320, t323, 0.666667f, t302, t332, 0.666667f).log();

        Tuple t011 = generateMidPoint(t010, t013, 0.333333f, t001, t031, 0.333333f).log();
        Tuple t012 = generateMidPoint(t010, t013, 0.666667f, t002, t032, 0.333333f).log();
        Tuple t021 = generateMidPoint(t020, t023, 0.333333f, t001, t031, 0.666667f).log();
        Tuple t022 = generateMidPoint(t020, t023, 0.666667f, t002, t032, 0.666667f).log();

        Tuple t101 = generateMidPoint(t100, t103, 0.333333f, t001, t301, 0.333333f).log();
        Tuple t102 = generateMidPoint(t100, t103, 0.666667f, t002, t302, 0.333333f).log();
        Tuple t201 = generateMidPoint(t200, t203, 0.333333f, t001, t301, 0.666667f).log();
        Tuple t202 = generateMidPoint(t200, t203, 0.666667f, t002, t302, 0.666667f).log();

        Tuple t131 = generateMidPoint(t130, t133, 0.333333f, t031, t331, 0.333333f).log();
        Tuple t132 = generateMidPoint(t130, t133, 0.666667f, t032, t332, 0.333333f).log();
        Tuple t231 = generateMidPoint(t230, t233, 0.333333f, t031, t331, 0.666667f).log();
        Tuple t232 = generateMidPoint(t230, t233, 0.666667f, t032, t332, 0.666667f).log();

        Tuple t110 = generateMidPoint(t100, t130, 0.333333f, t010, t310, 0.333333f).log();
        Tuple t120 = generateMidPoint(t100, t130, 0.666667f, t020, t320, 0.333333f).log();
        Tuple t210 = generateMidPoint(t200, t230, 0.333333f, t010, t310, 0.666667f).log();
        Tuple t220 = generateMidPoint(t200, t230, 0.666667f, t020, t320, 0.666667f).log();

        Tuple t113 = generateMidPoint(t103, t133, 0.333333f, t013, t313, 0.333333f).log();
        Tuple t123 = generateMidPoint(t103, t133, 0.666667f, t023, t323, 0.333333f).log();
        Tuple t213 = generateMidPoint(t203, t233, 0.333333f, t013, t313, 0.666667f).log();
        Tuple t223 = generateMidPoint(t203, t233, 0.666667f, t023, t323, 0.666667f).log();

        // Inside
        /*Tuple t111 =*/
        generateMidPoint(t110, t113, 0.333333f, t101, t131, 0.333333f, t011, t311, 0.333333f).log();
        /*Tuple t112 =*/
        generateMidPoint(t110, t113, 0.666667f, t102, t132, 0.333333f, t012, t312, 0.333333f).log();
        /*Tuple t121 =*/
        generateMidPoint(t120, t123, 0.333333f, t101, t131, 0.666667f, t021, t321, 0.333333f).log();
        /*Tuple t122 =*/
        generateMidPoint(t120, t123, 0.666667f, t102, t132, 0.666667f, t022, t322, 0.333333f).log();
        /*Tuple t211 =*/
        generateMidPoint(t210, t213, 0.333333f, t201, t231, 0.333333f, t011, t311, 0.666667f).log();
        /*Tuple t212 =*/
        generateMidPoint(t210, t213, 0.666667f, t202, t232, 0.333333f, t012, t312, 0.666667f).log();
        /*Tuple t221 =*/
        generateMidPoint(t220, t223, 0.333333f, t201, t231, 0.666667f, t021, t321, 0.666667f).log();
        /*Tuple t222 =*/
        generateMidPoint(t220, t223, 0.666667f, t202, t232, 0.666667f, t022, t322, 0.666667f).log();
    }

    public Paint getPaintFromPreset(WatchFacePreset.Style style) {
        regeneratePaints2();
        switch (style) {
            case FILL:
                return mFillPaint;
            case ACCENT:
                return mAccentPaint;
            case HIGHLIGHT:
                return mHighlightPaint;
            case BASE:
                return mBasePaint;
            case FILL_HIGHLIGHT:
                return mFillHighlightPaint;
            case ACCENT_FILL:
                return mAccentFillPaint;
            case ACCENT_HIGHLIGHT:
                return mAccentHighlightPaint;
            case ACCENT_BASE:
                return mBaseAccentPaint;
            default:
                // Should never hit this.
                return mFillPaint;
        }
    }

    private class GradientPaint extends Paint {
        private int mCustomHashCode = -1;

        public GradientPaint() {
            super();

            // From "newDefaultPaint".
            this.setStrokeJoin(Paint.Join.ROUND);
            this.setStrokeCap(Paint.Cap.ROUND);
            this.setAntiAlias(true);
//            this.setPathEffect(new CornerPathEffect(3.2f));
        }

        @Override
        public int hashCode() {
            return super.hashCode() + mCustomHashCode;
        }

        public void setColors(@ColorInt int colorA, @ColorInt int colorB,
                              WatchFacePreset.GradientStyle gradientStyle) {
            switch (gradientStyle) {
                case SWEEP:
                    addSweepGradient(colorA, colorB);
                    break;
                case RADIAL:
                    addRadialGradient(colorA, colorB);
                    break;
                case SWEEP_BRUSHED:
                    addSweepGradient(colorA, colorB);
                    addBrushedEffect();
                    break;
                case RADIAL_BRUSHED:
                    addRadialGradient(colorA, colorB);
                    addBrushedEffect();
                    break;
                default:
                    // Should never hit this.
                    break;
            }

            mCustomHashCode = Objects.hash(colorA, colorB, gradientStyle);
        }

        private void addSweepGradient(int colorA, int colorB) {
//        paint.setShader(new SweepGradient(mCenterX, mCenterY,
//                new int[]{colorA, colorB, colorA, colorB, colorA},
//                null));
            int[] gradient = new int[]{
                    getIntermediateColor(colorA, colorB, 1.0d), // Original
                    getIntermediateColor(colorA, colorB, 0.8d),
                    getIntermediateColor(colorA, colorB, 0.6d),
                    getIntermediateColor(colorA, colorB, 0.4d),
                    getIntermediateColor(colorA, colorB, 0.2d),
                    getIntermediateColor(colorA, colorB, 0.0d), // Original
                    getIntermediateColor(colorA, colorB, 0.2d),
                    getIntermediateColor(colorA, colorB, 0.4d),
                    getIntermediateColor(colorA, colorB, 0.6d),
                    getIntermediateColor(colorA, colorB, 0.8d),
                    getIntermediateColor(colorA, colorB, 1.0d), // Original
                    getIntermediateColor(colorA, colorB, 0.8d),
                    getIntermediateColor(colorA, colorB, 0.6d),
                    getIntermediateColor(colorA, colorB, 0.4d),
                    getIntermediateColor(colorA, colorB, 0.2d),
                    getIntermediateColor(colorA, colorB, 0.0d), // Original
                    getIntermediateColor(colorA, colorB, 0.2d),
                    getIntermediateColor(colorA, colorB, 0.4d),
                    getIntermediateColor(colorA, colorB, 0.6d),
                    getIntermediateColor(colorA, colorB, 0.8d),
                    getIntermediateColor(colorA, colorB, 1.0d), // Original
            };
            setShader(new SweepGradient(mCenterX, mCenterY, gradient, null));
        }

        private void addRadialGradient(int colorA, int colorB) {
//        paint.setShader(new RadialGradient(mCenterX, mCenterY, mCenterY,
//                new int[]{colorB, colorB, colorB, colorA, colorA},
//                null, Shader.TileMode.CLAMP));

            int[] gradient = new int[]{
                    colorB, // Original
                    colorB,
                    colorB,
                    colorB,
                    colorB,
                    colorB, // Original
                    colorB,
                    colorB,
                    colorB,
                    colorB,
                    colorB, // Original
                    getIntermediateColor(colorA, colorB, 0.2d),
                    getIntermediateColor(colorA, colorB, 0.4d),
                    getIntermediateColor(colorA, colorB, 0.6d),
                    getIntermediateColor(colorA, colorB, 0.8d),
                    colorA, // Original
                    colorA,
                    colorA,
                    colorA,
                    colorA,
                    colorA // Original
            };
            setShader(new RadialGradient(mCenterX, mCenterY, mCenterY, gradient, null,
                    Shader.TileMode.CLAMP));
        }

        private void addBrushedEffect() {
            Bitmap mAccentBasePaintBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
            Canvas canvas = new Canvas(mAccentBasePaintBitmap);

            float percent = mCenterX / 50f;
            float offset = 0.5f * percent;
            int alpha = 50;

            Paint circlePaint = new Paint();
            circlePaint.setStyle(Paint.Style.STROKE);
            circlePaint.setStrokeWidth(offset);
            circlePaint.setStrokeJoin(Paint.Join.ROUND);
            circlePaint.setAntiAlias(true);

            // Spun metal circles?
            for (int max = 50, i = max; i > 0; i--) {
                Path p = new Path();
                p.addCircle(mCenterX, mCenterY, mCenterX * i / max, Path.Direction.CW);

                p.offset(-offset, -offset);
                circlePaint.setColor(Color.WHITE);
                circlePaint.setAlpha(alpha);
                canvas.drawPath(p, circlePaint);

                p.offset(2f * offset, 2f * offset);
                circlePaint.setColor(Color.BLACK);
                circlePaint.setAlpha(alpha);
                canvas.drawPath(p, circlePaint);

                p.offset(-offset, -offset);
                canvas.drawPath(p, this);
            }

            setShader(new BitmapShader(mAccentBasePaintBitmap,
                    Shader.TileMode.CLAMP, Shader.TileMode.CLAMP));
        }
    }

    private long[] wikipediaColors = new long[1494];

    public PaintBox(WatchFacePreset preset) {
        this.preset = preset;
        mFillPaint = newDefaultPaint();
        mAccentPaint = newDefaultPaint();
        mHighlightPaint = newDefaultPaint();
        mBasePaint = newDefaultPaint();

//        mFillHighlightPaint = newDefaultPaint();
//        mAccentFillPaint = newDefaultPaint();
//        mBezelPaint2 = newDefaultPaint();
//        mAccentHighlightPaint = newDefaultPaint();
//        mBaseAccentPaint = newDefaultPaint();

        mAmbientPaint = newDefaultPaint();
        mAmbientPaint.setStyle(Paint.Style.STROKE);
        mAmbientPaint.setColor(AMBIENT_WHITE);
//        mAmbientPaint.setShadowLayer(SHADOW_RADIUS, 0, 0, mBaseColor);

        mShadowPaint = newDefaultPaint();
        mShadowPaint.setStyle(Paint.Style.FILL);
//        mShadowPaint.setShadowLayer(SHADOW_RADIUS, 0, 0, mWatchHandShadowColor);
//        mShadowPaint.setShadowLayer(SHADOW_RADIUS, 0, 0, Color.WHITE);

//        generatePalette();
//        generateHugeListOfColors();
//        generateTuples();
    }

    @TargetApi(26)
    private void generateHugeListOfColors() {
        int i = 0;
        ColorSpace CIE_LAB = ColorSpace.get(ColorSpace.Named.CIE_LAB);

        Log.d("AnalogWatchFace", "Generating lots of colors...");

        wikipediaNames[i] = "Absolute Zero";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x48, 0xBA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Acajou";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4C, 0x2F, 0x27), CIE_LAB);
        i++;
        wikipediaNames[i] = "Acid Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0xBF, 0x1A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Aero";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7C, 0xB9, 0xE8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Aero Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC9, 0xFF, 0xE5), CIE_LAB);
        i++;
        wikipediaNames[i] = "African Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB2, 0x84, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Air Force Blue (RAF)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0x8A, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Air Force Blue (USAF)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x30, 0x8F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Air Superiority Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x72, 0xA0, 0xC1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Alabama Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0x00, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Alabaster";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0xF0, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Alice Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xF8, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Alien Armpit";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x84, 0xDE, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Alizarin Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x26, 0x36), CIE_LAB);
        i++;
        wikipediaNames[i] = "Alloy Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC4, 0x62, 0x10), CIE_LAB);
        i++;
        wikipediaNames[i] = "Almond";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEF, 0xDE, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amaranth";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0x2B, 0x50), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amaranth Deep Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0x2B, 0x68), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amaranth Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF1, 0x9C, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amaranth Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAB, 0x27, 0x4F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amaranth Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD3, 0x21, 0x2D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amazon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3B, 0x7A, 0x57), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amazonite";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xC4, 0xB0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amber";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xBF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amber (SAE/ECE)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x7E, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3B, 0x3B, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x40, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD3, 0xAF, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x34, 0xB3, 0x34), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x8B, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x98, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x43, 0x1C, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB3, 0x21, 0x34), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x03, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0xCF, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x55, 0x1B, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "American Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0xB4, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Amethyst";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x66, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Android Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA4, 0xC6, 0x39), CIE_LAB);
        i++;
        wikipediaNames[i] = "Anti-Flash White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0xF3, 0xF4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Antique Brass";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x95, 0x75), CIE_LAB);
        i++;
        wikipediaNames[i] = "Antique Bronze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x5D, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Antique Fuchsia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x91, 0x5C, 0x83), CIE_LAB);
        i++;
        wikipediaNames[i] = "Antique Ruby";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x84, 0x1B, 0x2D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Antique White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xEB, 0xD7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ao (English)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x80, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Apple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0xB4, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Apple Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8D, 0xB6, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Apricot";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0xCE, 0xB1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Aqua";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Aquamarine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7F, 0xFF, 0xD4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Arctic Lime";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD0, 0xFF, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Army Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4B, 0x53, 0x20), CIE_LAB);
        i++;
        wikipediaNames[i] = "Arsenic";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3B, 0x44, 0x4B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Artichoke";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8F, 0x97, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Arylide Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0xD6, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ash Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB2, 0xBE, 0xB5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Asparagus";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0xA9, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ateneo Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x3A, 0x6C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Atomic Tangerine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x99, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Auburn";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x2A, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Aureolin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xEE, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "AuroMetalSaurus";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6E, 0x7F, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Avocado";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x56, 0x82, 0x03), CIE_LAB);
        i++;
        wikipediaNames[i] = "Awesome";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x20, 0x52), CIE_LAB);
        i++;
        wikipediaNames[i] = "Axolotl";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x63, 0x77, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Aztec Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC3, 0x99, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Azure";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x7F, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Azure (Web Color)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Azure Mist";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Azureish White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDB, 0xE9, 0xF4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Baby Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x89, 0xCF, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Baby Blue Eyes";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA1, 0xCA, 0xF1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Baby Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xC2, 0xC2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Baby Powder";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xFE, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Baker-Miller Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x91, 0xAF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ball Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x21, 0xAB, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Banana Mania";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xE7, 0xB5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Banana Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xE1, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bangladesh Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x6A, 0x4E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Barbie Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE0, 0x21, 0x8A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Barn Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7C, 0x0A, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Battery Charged Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1D, 0xAC, 0xD6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Battleship Grey";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x84, 0x84, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bazaar";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0x77, 0x7B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Beau Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBC, 0xD4, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Beaver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0x81, 0x70), CIE_LAB);
        i++;
        wikipediaNames[i] = "Begonia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0x6E, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Beige";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0xF5, 0xDC), CIE_LAB);
        i++;
        wikipediaNames[i] = "B'dazzled Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2E, 0x58, 0x94), CIE_LAB);
        i++;
        wikipediaNames[i] = "Big Dip Oâ€™ruby";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9C, 0x25, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Big Foot Feet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE8, 0x8E, 0x5A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bisque";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xE4, 0xC4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bistre";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3D, 0x2B, 0x1F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bistre Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x71, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bitter Lemon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCA, 0xE0, 0x0D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bitter Lime";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bittersweet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x6F, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bittersweet Shimmer";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0x4F, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black Bean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3D, 0x0C, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black Chocolate";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1B, 0x18, 0x11), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black Coffee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3B, 0x2F, 0x2F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black Coral";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x54, 0x62, 0x6F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black Leather Jacket";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x25, 0x35, 0x29), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black Olive";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3B, 0x3C, 0x36), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blackberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8F, 0x59, 0x73), CIE_LAB);
        i++;
        wikipediaNames[i] = "Black Shadows";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0xAF, 0xB2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blanched Almond";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xEB, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blast-Off Bronze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x71, 0x64), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bleu De France";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x31, 0x8C, 0xE7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blizzard Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0xE5, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blond";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xF0, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blood Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD1, 0x00, 0x1C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blood Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1F, 0x75, 0xFE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue (Munsell)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x93, 0xAF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue (NCS)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x87, 0xBD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue (Pantone)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x18, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue (Pigment)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x33, 0x33, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue (RYB)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x02, 0x47, 0xFE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue Bell";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA2, 0xA2, 0xD0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue Bolt";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xB9, 0xFB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue-Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x99, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue-Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0D, 0x98, 0xBA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue Jeans";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0xAD, 0xEC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue Lagoon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0xE5, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue-Magenta Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x55, 0x35, 0x92), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue Sapphire";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x12, 0x61, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue-Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0x2B, 0xE2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blue Yonder";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x50, 0x72, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blueberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4F, 0x86, 0xF7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bluebonnet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1C, 0x1C, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Blush";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x5D, 0x83), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bole";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x79, 0x44, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bondi Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x95, 0xB6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bone";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0xDA, 0xC9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Booger Buster";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDD, 0xE2, 0x6A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Boston University Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bottle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x6A, 0x4E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Boysenberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0x32, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brandeis Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x70, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brass";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB5, 0xA6, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brick Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCB, 0x41, 0x54), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Cerulean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1D, 0xAC, 0xD6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEB, 0xEC, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0x94, 0xE4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Lilac";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD8, 0x91, 0xEF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Maroon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC3, 0x21, 0x48), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Navy Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x19, 0x74, 0xD2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Turquoise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x08, 0xE8, 0xDE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Ube";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD1, 0x9F, 0xE8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bright Yellow (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xAA, 0x1D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brilliant Azure";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x33, 0x99, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brilliant Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xBB, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brilliant Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x55, 0xA3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brink Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0x60, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "British Racing Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x42, 0x25), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bronze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x54, 0x0B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bronze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x7F, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bronze (Metallic)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0x8D, 0x57), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bronze Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0x70, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x33, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0x59, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown (Traditional)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x4B, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x2A, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown-Nose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6B, 0x44, 0x23), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown Sugar";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0x6E, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown Chocolate";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5F, 0x19, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown Coffee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4A, 0x2C, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brown Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x99, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Brunswick Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1B, 0x4D, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bubble Gum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xC1, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bubbles";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE7, 0xFE, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bud Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7B, 0xB6, 0x61), CIE_LAB);
        i++;
        wikipediaNames[i] = "Buff";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xDC, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Bulgarian Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x48, 0x06, 0x07), CIE_LAB);
        i++;
        wikipediaNames[i] = "Burgundy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x00, 0x20), CIE_LAB);
        i++;
        wikipediaNames[i] = "Burlywood";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0xB8, 0x87), CIE_LAB);
        i++;
        wikipediaNames[i] = "Burnished Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA1, 0x7A, 0x74), CIE_LAB);
        i++;
        wikipediaNames[i] = "Burnt Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x55, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Burnt Sienna";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0x74, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Burnt Umber";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0x33, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Button Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x24, 0xA0, 0xED), CIE_LAB);
        i++;
        wikipediaNames[i] = "Byzantine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBD, 0x33, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Byzantium";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x29, 0x63), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x53, 0x68, 0x72), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadet Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5F, 0x9E, 0xA0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadet Grey";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x91, 0xA3, 0xB0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadmium Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0A, 0x11, 0x95), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadmium Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x6B, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadmium Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0x87, 0x2D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadmium Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB6, 0x0C, 0x26), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadmium Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x00, 0x22), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadmium Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF6, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cadmium Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7F, 0x3E, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "CafÃ© Au Lait";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0x7B, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "CafÃ© Noir";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4B, 0x36, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cal Poly Pomona Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1E, 0x4D, 0x2B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Calamansi";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0xFF, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cambridge Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA3, 0xC1, 0xAD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Camel";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0x9A, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cameo Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEF, 0xBB, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Camouflage Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x78, 0x86, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Canary";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Canary Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xEF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Candy Apple Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x08, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Candy Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0x71, 0x7A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Capri";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xBF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Caput Mortuum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x59, 0x27, 0x20), CIE_LAB);
        i++;
        wikipediaNames[i] = "Caramel";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xD5, 0x9A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cardinal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC4, 0x1E, 0x3A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Caribbean Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xCC, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x00, 0x18), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carmine (M&P)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD7, 0x00, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carmine Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEB, 0x4C, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carmine Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x38), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carnation Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA6, 0xC9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carnelian";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB3, 0x1B, 0x1B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carolina Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x56, 0xA0, 0xD3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Carrot Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0x91, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Castleton Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x56, 0x3F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Catalina Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x06, 0x2A, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Catawba";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x36, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cedar Chest";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC9, 0x5A, 0x49), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ceil";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x92, 0xA1, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Celadon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0xE1, 0xAF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Celadon Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x7B, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Celadon Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2F, 0x84, 0x7C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Celeste";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB2, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Celestial Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x49, 0x97, 0xD0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cerise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x31, 0x63), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cerise Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEC, 0x3B, 0x83), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cerulean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x7B, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cerulean Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2A, 0x52, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cerulean Frost";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6D, 0x9B, 0xC3), CIE_LAB);
        i++;
        wikipediaNames[i] = "CG Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x7A, 0xA5), CIE_LAB);
        i++;
        wikipediaNames[i] = "CG Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE0, 0x3C, 0x31), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chamoisee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA0, 0x78, 0x5A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Champagne";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0xE7, 0xCE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Champagne Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF1, 0xDD, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Charcoal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x36, 0x45, 0x4F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Charleston Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x23, 0x2B, 0x2B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Charm";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD0, 0x74, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Charm Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0x8F, 0xAC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chartreuse (Traditional)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDF, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chartreuse (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7F, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cheese";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA6, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cherry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x31, 0x63), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cherry Blossom Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xB7, 0xC5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chestnut";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x95, 0x45, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "China Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x6F, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "China Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA8, 0x51, 0x6E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x14, 0x14, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x36, 0x51, 0x94), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Bronze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x80, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAB, 0x38, 0x1F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD0, 0xDB, 0x61), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x99, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF3, 0x70, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x70, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x72, 0x0B, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x07, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0x38, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0xCC, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x85, 0x60, 0x88), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE2, 0xE5, 0xDE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chinese Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xB2, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chlorophyll Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4A, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chocolate Kisses";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0x14, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chocolate (Traditional)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7B, 0x3F, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chocolate (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD2, 0x69, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2A, 0x8F, 0xBD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x36, 0x51, 0x94), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0x2B, 0x2C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4C, 0x1F, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0x8D, 0x0D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x75, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCA, 0xA9, 0x06), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x66, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD5, 0x6C, 0x2B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCC, 0xCB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x42, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x33, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4D, 0x08, 0x4B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0x01, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0x1B, 0x2E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE1, 0xDF, 0xE0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCC, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Christmas Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xF2, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Chrome Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA7, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cinereous";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0x81, 0x7B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cinnabar";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x42, 0x34), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cinnamon[Citation Needed]";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD2, 0x69, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cinnamon Satin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x60, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Citrine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0xD0, 0x0A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Citrine Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x93, 0x37, 0x09), CIE_LAB);
        i++;
        wikipediaNames[i] = "Citron";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0xA9, 0x1F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Claret";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7F, 0x17, 0x34), CIE_LAB);
        i++;
        wikipediaNames[i] = "Classic Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0xCC, 0xE7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cobalt Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x47, 0xAB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cocoa Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD2, 0x69, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coconut";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x5A, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coffee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6F, 0x4E, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cola";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0x30, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Columbia Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC4, 0xD8, 0xE2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Conditioner";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Congo Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0x83, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cool Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x2E, 0x63), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cool Grey";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8C, 0x92, 0xAC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cookies And Cream";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0xE0, 0xB1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Copper";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB8, 0x73, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Copper (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x8A, 0x67), CIE_LAB);
        i++;
        wikipediaNames[i] = "Copper Penny";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAD, 0x6F, 0x69), CIE_LAB);
        i++;
        wikipediaNames[i] = "Copper Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCB, 0x6D, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Copper Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x66, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coquelicot";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x38, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coral";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x7F, 0x50), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coral Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0x83, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coral Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x40, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coral Reef";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x7C, 0x6E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cordovan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x89, 0x3F, 0x45), CIE_LAB);
        i++;
        wikipediaNames[i] = "Corn";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0xEC, 0x5D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cornell Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB3, 0x1B, 0x1B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cornflower Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x64, 0x95, 0xED), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cornsilk";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF8, 0xDC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cosmic Cobalt";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2E, 0x2D, 0x88), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cosmic Latte";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF8, 0xE7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Coyote Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x81, 0x61, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cotton Candy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xBC, 0xD9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cream";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFD, 0xD0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDC, 0x14, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Crimson Glory";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBE, 0x00, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Crimson Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cultured";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0xF5, 0xF5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyan Azure";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4E, 0x82, 0xB4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyan-Blue Azure";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x46, 0x82, 0xBF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyan Cobalt Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x28, 0x58, 0x9C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyan Cornflower Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x18, 0x8B, 0xC2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyan (Process)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xB7, 0xEB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyber Grape";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x58, 0x42, 0x7C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyber Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xD3, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Cyclamen";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0x6F, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Daffodil";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0x31), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dandelion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xE1, 0x30), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Blue-Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x66, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Bronze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x4A, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x65, 0x43, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Brown-Tangelo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x65, 0x4E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Byzantium";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0x39, 0x54), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Candy Apple Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA4, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Cerulean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x08, 0x45, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Charcoal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x33, 0x33, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Chestnut";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0x69, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Chocolate";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x49, 0x02, 0x06), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Chocolate (Hershey's)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0x13, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Cornflower Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x26, 0x42, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Coral";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x5B, 0x45), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x8B, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Electric Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x53, 0x68, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Goldenrod";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB8, 0x86, 0x0B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Gray (X11)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0xA9, 0xA9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x01, 0x32, 0x20), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Green (X11)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x64, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Gunmetal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1F, 0x26, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Imperial Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x41, 0x6A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Imperial Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x14, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Jungle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1A, 0x24, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Khaki";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBD, 0xB7, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Lava";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x48, 0x3C, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0x4F, 0x96), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Lemon Lime";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0xBE, 0x1B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Liver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x53, 0x4B, 0x4F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Liver (Horses)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x54, 0x3D, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0x00, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Medium Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0xA9, 0xA9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Midnight Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x33, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Moss Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4A, 0x5D, 0x23), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Olive Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x55, 0x6B, 0x2F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x8C, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Orchid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x32, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Pastel Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x77, 0x9E, 0xCB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Pastel Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x03, 0xC0, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Pastel Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x6F, 0xD6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Pastel Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC2, 0x3B, 0x22), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE7, 0x54, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Powder Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x33, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Puce";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4F, 0x3A, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x30, 0x19, 0x34), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Raspberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0x26, 0x57), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Salmon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0x96, 0x7A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Scarlet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x56, 0x03, 0x19), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Sea Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8F, 0xBC, 0x8F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Sienna";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0x14, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8C, 0xBE, 0xD6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Slate Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x48, 0x3D, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Slate Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2F, 0x4F, 0x4F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Spring Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x17, 0x72, 0x45), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Tan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x91, 0x81, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Tangerine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA8, 0x12), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x48, 0x3C, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Terra Cotta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x4E, 0x5C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Turquoise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xCE, 0xD1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Vanilla";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD1, 0xBE, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x94, 0x00, 0xD3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dark Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9B, 0x87, 0x0C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dartmouth Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x70, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Davy's Grey";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x55, 0x55, 0x55), CIE_LAB);
        i++;
        wikipediaNames[i] = "Debian Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD7, 0x0A, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Amethyst";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9C, 0x8A, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Aquamarine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x40, 0x82, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0x20, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Carmine Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEF, 0x30, 0x38), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Carrot Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0x69, 0x2C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Cerise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x32, 0x87), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Champagne";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xD6, 0xA5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Chestnut";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB9, 0x4E, 0x48), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Coffee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x42, 0x41), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Fuchsia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0x54, 0xC1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x05, 0x66, 0x08), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Green-Cyan Turquoise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0E, 0x7C, 0x61), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Jungle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x4B, 0x49), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Koamaru";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x33, 0x33, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Lemon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0xC7, 0x1A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Lilac";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x55, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x00, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Maroon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x82, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Mauve";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD4, 0x73, 0xD4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Moss Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x35, 0x5E, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Peach";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCB, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x14, 0x93), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Puce";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0x5C, 0x68), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x85, 0x01, 0x01), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Ruby";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x84, 0x3F, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Saffron";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x99, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xBF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Space Sparkle";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4A, 0x64, 0x6C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Spring Bud";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x55, 0x6B, 0x2F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7E, 0x5E, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Tuscan Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x42, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deep Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x33, 0x00, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Deer";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBA, 0x87, 0x59), CIE_LAB);
        i++;
        wikipediaNames[i] = "Denim";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x15, 0x60, 0xBD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Denim Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x22, 0x43, 0xB6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Desaturated Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x99, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Desert";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0x9A, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Desert Sand";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0xC9, 0xAF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Desire";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEA, 0x3C, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Diamond";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB9, 0xF2, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dim Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x69, 0x69, 0x69), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dingy Dungeon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC5, 0x31, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dirt";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9B, 0x76, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dirty Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB5, 0x65, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dirty White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE8, 0xE4, 0xC9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dodger Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1E, 0x90, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dodie Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xF6, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dogwood Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD7, 0x18, 0x68), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dollar Bill";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x85, 0xBB, 0x65), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dolphin Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x82, 0x8E, 0x84), CIE_LAB);
        i++;
        wikipediaNames[i] = "Donkey Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x4C, 0x28), CIE_LAB);
        i++;
        wikipediaNames[i] = "Drab";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x71, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Duke Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0x9C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dust Storm";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0xCC, 0xC9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Dutch White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEF, 0xDF, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Earth Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE1, 0xA9, 0x5F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ebony";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x55, 0x5D, 0x50), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ecru";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC2, 0xB2, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Eerie Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1B, 0x1B, 0x1B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Eggplant";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x61, 0x40, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Eggshell";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xEA, 0xD6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Egyptian Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x10, 0x34, 0xA6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7D, 0xF9, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x3F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Indigo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6F, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xBB, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Lime";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Ultramarine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3F, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8F, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Electric Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Emerald";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x50, 0xC8, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Emerald Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x04, 0x63, 0x07), CIE_LAB);
        i++;
        wikipediaNames[i] = "Eminence";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6C, 0x30, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "English Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1B, 0x4D, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "English Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB4, 0x83, 0x95), CIE_LAB);
        i++;
        wikipediaNames[i] = "English Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAB, 0x4B, 0x52), CIE_LAB);
        i++;
        wikipediaNames[i] = "English Vermillion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x47, 0x4B), CIE_LAB);
        i++;
        wikipediaNames[i] = "English Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x56, 0x3C, 0x5C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Eton Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0xC8, 0xA2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Eucalyptus";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x44, 0xD7, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fallow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0x9A, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Falu Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x18, 0x18), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fandango";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB5, 0x33, 0x89), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fandango Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x52, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fashion Fuchsia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0x00, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fawn";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0xAA, 0x70), CIE_LAB);
        i++;
        wikipediaNames[i] = "Feldgrau";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4D, 0x5D, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Feldspar";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xD5, 0xB1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fern Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4F, 0x79, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ferrari Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x28, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Field Drab";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6C, 0x54, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fiery Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x54, 0x70), CIE_LAB);
        i++;
        wikipediaNames[i] = "Firebrick";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB2, 0x22, 0x22), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fire Engine Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCE, 0x20, 0x29), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fire Opal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0x5C, 0x4B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Flame";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE2, 0x58, 0x22), CIE_LAB);
        i++;
        wikipediaNames[i] = "Flamingo Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0x8E, 0xAC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Flattery";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6B, 0x44, 0x23), CIE_LAB);
        i++;
        wikipediaNames[i] = "Flavescent";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0xE9, 0x8E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Flax";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0xDC, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Flesh";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xE9, 0xD1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Flirt";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA2, 0x00, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Floral White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFA, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fluorescent Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xBF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fluorescent Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x14, 0x93), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fluorescent Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Folly";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x4F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Forest Green (Traditional)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x01, 0x44, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Forest Green (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x22, 0x8B, 0x22), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Beige";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0x7B, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Bistre";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x85, 0x6D, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x72, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Fuchsia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x3F, 0x92), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Lilac";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x86, 0x60, 0x8E), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Lime";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9E, 0xFD, 0x38), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Mauve";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD4, 0x73, 0xD4), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x6C, 0x9E), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Plum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x81, 0x14, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Puce";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4E, 0x16, 0x09), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Raspberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC7, 0x2C, 0x48), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF6, 0x4A, 0x8A), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x77, 0xB5, 0xFE), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x06, 0xCE), CIE_LAB);
        i++;
        wikipediaNames[i] = "French Wine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0x1E, 0x44), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fresh Air";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0xE7, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Frostbite";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0x36, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fuchsia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fuchsia (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0x54, 0xC1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fuchsia Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x77, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fuchsia Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x39, 0x7B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fuchsia Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC7, 0x43, 0x75), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fulvous";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0x84, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Fuzzy Wuzzy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x66, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gainsboro";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDC, 0xDC, 0xDC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gamboge";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0x9B, 0x0F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gamboge Orange (Brown)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x66, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Granet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0x36, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gargoyle Gas";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDF, 0x46), CIE_LAB);
        i++;
        wikipediaNames[i] = "Generic Viridian";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x7F, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ghost White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0xF8, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Giant's Club";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0x5C, 0x52), CIE_LAB);
        i++;
        wikipediaNames[i] = "Giants Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x5A, 0x1D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ginger";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0x65, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Glaucous";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x60, 0x82, 0xB6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Glitter";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xE8, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Glossy Grape";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAB, 0x92, 0xB3), CIE_LAB);
        i++;
        wikipediaNames[i] = "GO Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xAB, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x7C, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gold (Metallic)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD4, 0xAF, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gold (Web) (Golden)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xD7, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gold (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xBE, 0x8A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gold Fusion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x85, 0x75, 0x4E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gold Foil";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBD, 0x9B, 0x16), CIE_LAB);
        i++;
        wikipediaNames[i] = "Golden Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x65, 0x15), CIE_LAB);
        i++;
        wikipediaNames[i] = "Golden Poppy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0xC2, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Golden Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Goldenrod";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0xA5, 0x20), CIE_LAB);
        i++;
        wikipediaNames[i] = "Granite Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x67, 0x67), CIE_LAB);
        i++;
        wikipediaNames[i] = "Granny Smith Apple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA8, 0xE4, 0xA0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Grape";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6F, 0x2D, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gray (HTML/CSS Gray)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x80, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gray (X11 Gray)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBE, 0xBE, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gray-Asparagus";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x46, 0x59, 0x45), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gray-Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8C, 0x92, 0xAC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x80, 0x01), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (Color Wheel) (X11 Green)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1C, 0xAC, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (HTML/CSS Color)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x80, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (Munsell)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xA8, 0x77), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (NCS)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x9F, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (Pantone)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xAD, 0x43), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (Pigment)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xA5, 0x50), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green (RYB)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0xB0, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green-Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x11, 0x64, 0xB4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green-Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x99, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green Lizard";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA7, 0xF4, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green Sheen";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6E, 0xAE, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Green-Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAD, 0xFF, 0x2F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Grizzly";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x58, 0x18), CIE_LAB);
        i++;
        wikipediaNames[i] = "Grullo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0x9A, 0x86), CIE_LAB);
        i++;
        wikipediaNames[i] = "Guppie Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Gunmetal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2A, 0x34, 0x39), CIE_LAB);
        i++;
        wikipediaNames[i] = "HalayÃ  Ãšbe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x38, 0x54), CIE_LAB);
        i++;
        wikipediaNames[i] = "Halloween Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEB, 0x61, 0x23), CIE_LAB);
        i++;
        wikipediaNames[i] = "Han Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x44, 0x6C, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Han Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x52, 0x18, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Hansa Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0xD6, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Harlequin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3F, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Harlequin Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x46, 0xCB, 0x18), CIE_LAB);
        i++;
        wikipediaNames[i] = "Harvard Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC9, 0x00, 0x16), CIE_LAB);
        i++;
        wikipediaNames[i] = "Harvest Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x91, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Heart Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x80, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Heat Wave";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x7A, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Heidelberg Red[2]";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x00, 0x18), CIE_LAB);
        i++;
        wikipediaNames[i] = "Heliotrope";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDF, 0x73, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Heliotrope Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0x98, 0xA9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Heliotrope Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0x00, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Hollywood Cerise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0x00, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Honeydew";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xFF, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Honolulu Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x6D, 0xB0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Hooker's Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x49, 0x79, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Hot Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x1D, 0xCE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Hot Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x69, 0xB4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Hunter Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x35, 0x5E, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Iceberg";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x71, 0xA6, 0xD2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Icterine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0xF7, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Iguana Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x71, 0xBC, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Illuminating Emerald";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x31, 0x91, 0x77), CIE_LAB);
        i++;
        wikipediaNames[i] = "Imperial";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x60, 0x2F, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Imperial Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x23, 0x95), CIE_LAB);
        i++;
        wikipediaNames[i] = "Imperial Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x02, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Imperial Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0x29, 0x39), CIE_LAB);
        i++;
        wikipediaNames[i] = "Inchworm";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB2, 0xEC, 0x5D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Independence";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4C, 0x51, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "India Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x13, 0x88, 0x08), CIE_LAB);
        i++;
        wikipediaNames[i] = "Indian Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x5C, 0x5C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Indian Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0xA8, 0x57), CIE_LAB);
        i++;
        wikipediaNames[i] = "Indigo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4B, 0x00, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Indigo Dye";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x09, 0x1F, 0x92), CIE_LAB);
        i++;
        wikipediaNames[i] = "Indigo (Rainbow)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x23, 0x30, 0x67), CIE_LAB);
        i++;
        wikipediaNames[i] = "Indigo (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4B, 0x00, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Infra Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x49, 0x6C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Interdimensional Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x36, 0x0C, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "International Klein Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x2F, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "International Orange (Aerospace)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x4F, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "International Orange (Engineering)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBA, 0x16, 0x0C), CIE_LAB);
        i++;
        wikipediaNames[i] = "International Orange (Golden Gate Bridge)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC0, 0x36, 0x2C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Iris";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5A, 0x4F, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Irresistible";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB3, 0x44, 0x6C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Isabelline";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xF0, 0xEC), CIE_LAB);
        i++;
//        wikipediaNames[i] = "Islamic Green"; wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x90, 0x00), CIE_LAB); i++;
        wikipediaNames[i] = "Italian Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB2, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ivory";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jacarta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3D, 0x32, 0x5D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jacko Bean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x41, 0x36, 0x28), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jade";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xA8, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Japanese Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9D, 0x29, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Japanese Indigo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x26, 0x43, 0x48), CIE_LAB);
        i++;
        wikipediaNames[i] = "Japanese Laurel";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2F, 0x75, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Japanese Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5B, 0x32, 0x56), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jasmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0xDE, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jasper";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD7, 0x3B, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jasper Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x8F, 0x4E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jazzberry Jam";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x0B, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jelly Bean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x61, 0x4E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jelly Bean Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x44, 0x79, 0x8E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x34, 0x34, 0x34), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jet Stream";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBB, 0xD0, 0xC9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jonquil";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xCA, 0x16), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jordy Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0xB9, 0xF1), CIE_LAB);
        i++;
        wikipediaNames[i] = "June Bud";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBD, 0xDA, 0x57), CIE_LAB);
        i++;
        wikipediaNames[i] = "Jungle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x29, 0xAB, 0x87), CIE_LAB);
        i++;
        wikipediaNames[i] = "Kelly Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4C, 0xBB, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Kenyan Copper";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7C, 0x1C, 0x05), CIE_LAB);
        i++;
        wikipediaNames[i] = "Keppel";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3A, 0xB0, 0x9E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Key Lime";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE8, 0xF4, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Khaki (HTML/CSS) (Khaki)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC3, 0xB0, 0x91), CIE_LAB);
        i++;
        wikipediaNames[i] = "Khaki (X11) (Light Khaki)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xE6, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Kiwi";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8E, 0xE5, 0x3F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Kobe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x2D, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Kobi";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE7, 0x9F, 0xC4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Kobicha";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6B, 0x44, 0x23), CIE_LAB);
        i++;
        wikipediaNames[i] = "Kombu Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x35, 0x42, 0x30), CIE_LAB);
        i++;
        wikipediaNames[i] = "KSU Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x51, 0x28, 0x88), CIE_LAB);
        i++;
        wikipediaNames[i] = "KU Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE8, 0x00, 0x0D), CIE_LAB);
        i++;
        wikipediaNames[i] = "La Salle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x08, 0x78, 0x30), CIE_LAB);
        i++;
        wikipediaNames[i] = "Languid Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD6, 0xCA, 0xDD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lapis Lazuli";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x26, 0x61, 0x9C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Laser Lemon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Laurel Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0xBA, 0x9D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lava";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0x10, 0x20), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender (Floral)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB5, 0x7E, 0xDC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xE6, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0xCC, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Blush";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF0, 0xF5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC4, 0xC3, 0xD0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Indigo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x94, 0x57, 0xEB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0x82, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Mist";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xE6, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0xAE, 0xD2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x7B, 0xB6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lavender Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0xA0, 0xE3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lawn Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7C, 0xFC, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF7, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon Chiffon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFA, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon Curry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0xA0, 0x1D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon Glacier";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon Lime";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon Meringue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF6, 0xEA, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF4, 0x4F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lemon Yellow (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0x9F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lenurple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBA, 0x93, 0xD8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Liberty";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x54, 0x5A, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Licorice";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1A, 0x11, 0x10), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Apricot";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xD5, 0xB1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAD, 0xD8, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Brilliant Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x2E, 0x2E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB5, 0x65, 0x1D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Carmine Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0x67, 0x71), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Cobalt Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0xAC, 0xE0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Coral";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0x80, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Cornflower Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x93, 0xCC, 0xEA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0x69, 0x91), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE0, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Deep Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x5C, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light French Beige";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC8, 0xAD, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Fuchsia Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF9, 0x84, 0xEF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB2, 0x97, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Goldenrod Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xFA, 0xD2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD3, 0xD3, 0xD3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Grayish Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x99, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x90, 0xEE, 0x90), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Hot Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xB3, 0xDE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Khaki";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0xE6, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Medium Orchid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD3, 0x9B, 0xCB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Moss Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAD, 0xDF, 0xAD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xD8, 0xB1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Orchid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xA8, 0xD7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Pastel Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB1, 0x9C, 0xD9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Periwinkle";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC5, 0xCB, 0xE1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xB6, 0xC1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCC, 0xCB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Red Ochre";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0x74, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Salmon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA0, 0x7A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Salmon Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x99, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Sea Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x20, 0xB2, 0xAA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD8, 0xD8, 0xD8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0xCE, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Slate Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x77, 0x88, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Steel Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0xC4, 0xDE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB3, 0x8B, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Thulian Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0x8F, 0xAC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Light Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0xE0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lilac";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC8, 0xA2, 0xC8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lilac Luster";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAE, 0x98, 0xAA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lime (Color Wheel)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lime (Web) (X11 Green)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lime Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x32, 0xCD, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Limerick";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9D, 0xC2, 0x09), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lincoln Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x19, 0x59, 0x05), CIE_LAB);
        i++;
        wikipediaNames[i] = "Linen";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xF0, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0x9A, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Liseran Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x6F, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Little Boy Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6C, 0xA0, 0xDC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Little Girl Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0xB9, 0xD4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Liver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x4C, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Liver (Dogs)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB8, 0x6D, 0x29), CIE_LAB);
        i++;
        wikipediaNames[i] = "Liver (Organ)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6C, 0x2E, 0x1F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Liver Chestnut";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0x74, 0x56), CIE_LAB);
        i++;
        wikipediaNames[i] = "Livid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x99, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Loeen Look";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x15, 0xF2, 0xFD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lotion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xFD, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lumber";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xE4, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Lust";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0x20, 0x20), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maastricht Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x1C, 0x3D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Macaroni And Cheese";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xBD, 0x88), CIE_LAB);
        i++;
        wikipediaNames[i] = "Madder Lake";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x33, 0x36), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magenta (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x55, 0xA3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magenta (Dye)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCA, 0x1F, 0x7B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magenta (Pantone)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD0, 0x41, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magenta (Process)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x90), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magenta Haze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0x45, 0x76), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magenta-Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x33, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magic Mint";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0xF0, 0xD1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magic Potion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x44, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Magnolia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0xF4, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mahogany";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC0, 0x40, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maize";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0xEC, 0x5D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maize (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0xC6, 0x49), CIE_LAB);
        i++;
        wikipediaNames[i] = "Majorelle Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x60, 0x50, 0xDC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Malachite";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0B, 0xDA, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Manatee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x97, 0x9A, 0xAA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mandarin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF3, 0x7A, 0x48), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mango Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mango Tango";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x82, 0x43), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mango Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mantis";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x74, 0xC3, 0x65), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mardi Gras";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x00, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Marigold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEA, 0xA2, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maroon (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC3, 0x21, 0x48), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maroon (HTML/CSS)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maroon (X11)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0x30, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mauve";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE0, 0xB0, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mauve Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x91, 0x5F, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mauvelous";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEF, 0x98, 0xAA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x47, 0xAB, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Blue Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x30, 0xBF, 0xBF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Blue Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0xAC, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5E, 0x8C, 0x31), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Green Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0xE6, 0x50), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0x33, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x21, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Red Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0x3A, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xFA, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maximum Yellow Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0xBA, 0x49), CIE_LAB);
        i++;
        wikipediaNames[i] = "May Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4C, 0x91, 0x41), CIE_LAB);
        i++;
        wikipediaNames[i] = "Maya Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0xC2, 0xFB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Meat Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0xB7, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Aquamarine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0xDD, 0xAA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Candy Apple Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE2, 0x06, 0x2C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0x40, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Champagne";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF3, 0xE5, 0xAB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Electric Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x03, 0x50, 0x96), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Jungle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1C, 0x35, 0x2D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Lavender Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDD, 0xA0, 0xDD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Orchid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBA, 0x55, 0xD3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Persian Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x67, 0xA5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x93, 0x70, 0xDB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Red-Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBB, 0x33, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Ruby";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0x40, 0x69), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Sea Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0xB3, 0x71), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0xDA, 0xEB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Slate Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7B, 0x68, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Spring Bud";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC9, 0xDC, 0x87), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Spring Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFA, 0x9A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x4C, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Turquoise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x48, 0xD1, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Tuscan Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x79, 0x44, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Vermilion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x60, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Medium Violet-Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC7, 0x15, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mellow Apricot";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0xB8, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mellow Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0xDE, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Melon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xBC, 0xB4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Menthol";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0xF9, 0xA2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x32, 0x52, 0x7B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Bronze";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0x71, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0x43, 0x13), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA9, 0x71, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x29, 0x6E, 0x01), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x68, 0x0F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0xA6, 0xC4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0x2C, 0x2B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Seaweed";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0A, 0x7E, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA8, 0xA9, 0xAD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Sunburst";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9C, 0x7C, 0x38), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5B, 0x0A, 0x91), CIE_LAB);
        i++;
        wikipediaNames[i] = "Metallic Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xCC, 0x0D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mexican Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0x00, 0x7C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7E, 0xD4, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Blue Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8D, 0xD9, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Blue Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0x72, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Grey";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0x86, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4D, 0x8C, 0x57), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Green Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0xBF, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x82, 0xB5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0x8E, 0x73), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Red Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x53, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xEB, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Middle Yellow Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEC, 0xB1, 0x76), CIE_LAB);
        i++;
        wikipediaNames[i] = "Midnight";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x26, 0x70), CIE_LAB);
        i++;
        wikipediaNames[i] = "Midnight Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x19, 0x19, 0x70), CIE_LAB);
        i++;
        wikipediaNames[i] = "Midnight Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x46, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Midnight Green (Eagle Green)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x49, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mikado Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xC4, 0x0C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Milk";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xFF, 0xF5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Milk Chocolate";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x84, 0x56, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mimi Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDA, 0xE9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mindaro";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0xF9, 0x88), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ming";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x36, 0x74, 0x7D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Minion Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0xE0, 0x50), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mint";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3E, 0xB4, 0x89), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mint Cream";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0xFF, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mint Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0xFF, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "Misty Moss";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBB, 0xB4, 0x77), CIE_LAB);
        i++;
        wikipediaNames[i] = "Misty Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xE4, 0xE1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Moccasin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xEB, 0xD7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mode Beige";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x71, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Moonstone";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3A, 0xA8, 0xC1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Moonstone Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0xA9, 0xC2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mordant Red 19";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAE, 0x0C, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Morning Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8D, 0xA3, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Moss Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0x9A, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mountain Meadow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x30, 0xBA, 0x8F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mountbatten Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x7A, 0x8D), CIE_LAB);
        i++;
        wikipediaNames[i] = "MSU Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x18, 0x45, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mud";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x54, 0x3E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mughal Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x30, 0x60, 0x30), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mulberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC5, 0x4B, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mulberry (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC8, 0x50, 0x9B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mummy's Tomb";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x82, 0x8E, 0x84), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mustard";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDB, 0x58), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mustard Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x7A, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mustard Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6E, 0x6E, 0x30), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mustard Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE1, 0xAD, 0x01), CIE_LAB);
        i++;
        wikipediaNames[i] = "Myrtle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x31, 0x78, 0x73), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mystic";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD6, 0x52, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mystic Maroon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAD, 0x43, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Mystic Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x55, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Nadeshiko Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF6, 0xAD, 0xC6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Napier Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2A, 0x80, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Naples Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xDA, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Navajo White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDE, 0xAD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Navy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Navy Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Navy Blue (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x19, 0x74, 0xD2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Navy Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x94, 0x57, 0xEB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1B, 0x03, 0xA3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC3, 0x73, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Carrot";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA3, 0x43), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFE, 0xFC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Fuchsia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x41, 0x64), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0xAA, 0x01), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x80, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x39, 0xFF, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x39, 0xFF, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x34, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x94, 0x57, 0xEB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x18, 0x18), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Scarlet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x26, 0x03), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0xCC, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Tangerine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF6, 0x89, 0x0A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Neon Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF7, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "New Car";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x21, 0x4F, 0xC6), CIE_LAB);
        i++;
        wikipediaNames[i] = "New York Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD7, 0x83, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Nickel";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x72, 0x74, 0x72), CIE_LAB);
        i++;
        wikipediaNames[i] = "Non-Photo Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA4, 0xDD, 0xED), CIE_LAB);
        i++;
        wikipediaNames[i] = "North Texas Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x05, 0x90, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Nyanza";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE9, 0xFF, 0xDB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ocean Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4F, 0x42, 0xB5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ocean Boat Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x77, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ocean Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x48, 0xBF, 0x91), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ochre";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x77, 0x22), CIE_LAB);
        i++;
        wikipediaNames[i] = "Office Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x80, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ogre Odor";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x52, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Burgundy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x43, 0x30, 0x2E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0xB5, 0x3B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Heliotrope";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x56, 0x3C, 0x5C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Lace";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xF5, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x79, 0x68, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Mauve";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x31, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Moss Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x86, 0x7E, 0x36), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC0, 0x80, 0x81), CIE_LAB);
        i++;
        wikipediaNames[i] = "Old Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x84, 0x84, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Olive";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x80, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Olive Drab 3";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6B, 0x8E, 0x23), CIE_LAB);
        i++;
        wikipediaNames[i] = "Olive Drab 7";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0x34, 0x1F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Olivine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9A, 0xB9, 0x73), CIE_LAB);
        i++;
        wikipediaNames[i] = "Onyx";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x35, 0x38, 0x39), CIE_LAB);
        i++;
        wikipediaNames[i] = "Opal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA8, 0xC3, 0xBC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Opera Mauve";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB7, 0x84, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange (Color Wheel)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x7F, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x75, 0x38), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange (Pantone)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x58, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange (RYB)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0x99, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA5, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange Peel";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x9F, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange-Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x45, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange Soda";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0x5B, 0x3D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orange-Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0xD5, 0x68), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orchid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x70, 0xD6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orchid Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0xBD, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Orioles Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0x4F, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Otter Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x65, 0x43, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "Outer Space";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x41, 0x4A, 0x4C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Outrageous Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x6E, 0x4A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Oxford Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x21, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Oxley";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6D, 0x9A, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "OU Crimson Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pacific Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1C, 0xA9, 0xC9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pakistan Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x66, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Palatinate Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x27, 0x3B, 0xE2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Palatinate Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x68, 0x28, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Aqua";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBC, 0xD4, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0xEE, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0x76, 0x54), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0x40, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Cerulean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9B, 0xC4, 0xE2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Chestnut";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDD, 0xAD, 0xAF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Copper";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x8A, 0x67), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Cornflower Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAB, 0xCD, 0xEF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Cyan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0xD3, 0xF8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xBE, 0x8A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Goldenrod";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0xE8, 0xAA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0xFB, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDC, 0xD0, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF9, 0x84, 0xE5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Magenta-Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x99, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xDA, 0xDD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Plum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDD, 0xA0, 0xDD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Red-Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDB, 0x70, 0x93), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Robin Egg Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0xDE, 0xD1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC9, 0xC0, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Spring Bud";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEC, 0xEB, 0xBD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBC, 0x98, 0x7E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Turquoise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0xEE, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x99, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pale Violet-Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDB, 0x70, 0x93), CIE_LAB);
        i++;
        wikipediaNames[i] = "Palm Leaf";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6F, 0x99, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pansy Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x78, 0x18, 0x4A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Paolo Veronese Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x9B, 0x7D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Papaya Whip";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xEF, 0xD5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Paradise Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0x3E, 0x62), CIE_LAB);
        i++;
        wikipediaNames[i] = "Paris Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x50, 0xC8, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Parrot Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x98, 0xA0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAE, 0xC6, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x83, 0x69, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0xCF, 0xC4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x77, 0xDD, 0x77), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0x9A, 0xC2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xB3, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0xA5, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB3, 0x9E, 0xB5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x69, 0x61), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCB, 0x99, 0xC9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pastel Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xFD, 0x96), CIE_LAB);
        i++;
        wikipediaNames[i] = "Patriarch";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x00, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Payne's Grey";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x53, 0x68, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Peach";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xE5, 0xB4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Peach";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCB, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Peach-Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCC, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Peach Puff";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDA, 0xB9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Peach-Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xDF, 0xAD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pear";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD1, 0xE2, 0x31), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pearl";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEA, 0xE0, 0xC8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pearl Aqua";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0xD8, 0xC0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pearly Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB7, 0x68, 0xA2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Peridot";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xE2, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Periwinkle";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0xCC, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Periwinkle (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC3, 0xCD, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Permanent Geranium Lake";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE1, 0x2C, 0x2C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1C, 0x39, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xA6, 0x93), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Indigo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x32, 0x12, 0x7A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x90, 0x58), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0x7F, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Plum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x1C, 0x1C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x33, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persian Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x28, 0xA2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Persimmon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEC, 0x58, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Peru";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x85, 0x3F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pewter Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0xA8, 0xB7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x38, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0x19, 0x16), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB1, 0x73, 0x04), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Golden Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8C, 0x8C, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x85, 0x43), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x73, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0x1A, 0x8E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCE, 0x11, 0x27), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x7C, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCE, 0x11, 0x27), CIE_LAB);
        i++;
        wikipediaNames[i] = "Philippine Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xCB, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Phlox";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDF, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Phthalo Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x0F, 0x89), CIE_LAB);
        i++;
        wikipediaNames[i] = "Phthalo Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x12, 0x35, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Picton Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x45, 0xB1, 0xE8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pictorial Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC3, 0x0B, 0x4E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Piggy Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xDD, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pine Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x01, 0x79, 0x6F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pine Tree";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2A, 0x2F, 0x23), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pineapple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x56, 0x3C, 0x0D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xC0, 0xCB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink (Pantone)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD7, 0x48, 0x94), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink Flamingo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0x74, 0xFD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink Lace";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDD, 0xF4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD8, 0xB2, 0xD1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink-Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x99, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink Pearl";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE7, 0xAC, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink Raspberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0x00, 0x36), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pink Sherbet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0x8F, 0xA7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pistachio";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x93, 0xC5, 0x72), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pixie Powder";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x39, 0x12, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Platinum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0xE4, 0xE2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Plum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8E, 0x45, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Plum (Web)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDD, 0xA0, 0xDD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Plump Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x59, 0x46, 0xB2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Police Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x37, 0x4F, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Polished Pine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0xA4, 0x93), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pomp And Power";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x86, 0x60, 0x8E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Popstar";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBE, 0x4F, 0x62), CIE_LAB);
        i++;
        wikipediaNames[i] = "Portland Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x5A, 0x36), CIE_LAB);
        i++;
        wikipediaNames[i] = "Powder Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0xE0, 0xE6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Princess Perfume";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x85, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Princeton Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0x80, 0x25), CIE_LAB);
        i++;
        wikipediaNames[i] = "Prune";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x1C, 0x1C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Prussian Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x31, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Psychedelic Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDF, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Puce";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x88, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Puce Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x72, 0x2F, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pullman Brown (UPS Brown)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x64, 0x41, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pullman Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3B, 0x33, 0x1C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Pumpkin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x75, 0x18), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple (HTML)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x00, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple (Munsell)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0x00, 0xC5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple (X11)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA0, 0x20, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple Heart";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x69, 0x35, 0x9C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple Mountain Majesty";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x78, 0xB6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple Navy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4E, 0x51, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple Pizzazz";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x4E, 0xDA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple Plum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9C, 0x51, 0xB6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purple Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x50, 0x40, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Purpureus";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9A, 0x4E, 0xAE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Quartz";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x51, 0x48, 0x4F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Queen Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x43, 0x6B, 0x95), CIE_LAB);
        i++;
        wikipediaNames[i] = "Queen Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE8, 0xCC, 0xD7), CIE_LAB);
        i++;
        wikipediaNames[i] = "Quick Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0xA6, 0xA6), CIE_LAB);
        i++;
        wikipediaNames[i] = "Quinacridone Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8E, 0x3A, 0x59), CIE_LAB);
        i++;
        wikipediaNames[i] = "Quincy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6A, 0x54, 0x45), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rackley";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0x8A, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Radical Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x35, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Raisin Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x24, 0x21, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rajah";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0xAB, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Raspberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x0B, 0x5D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Raspberry Glace";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x91, 0x5F, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Raspberry Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE2, 0x50, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "Raspberry Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB3, 0x44, 0x6C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Raw Sienna";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD6, 0x8A, 0x59), CIE_LAB);
        i++;
        wikipediaNames[i] = "Raw Umber";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x82, 0x66, 0x44), CIE_LAB);
        i++;
        wikipediaNames[i] = "Razzle Dazzle Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x33, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Razzmatazz";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x25, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Razzmic Berry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8D, 0x4E, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rebecca Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x33, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0x20, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red (Munsell)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0x00, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red (NCS)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC4, 0x02, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red (Pantone)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0x29, 0x39), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red (Pigment)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0x1C, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red (RYB)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0x27, 0x12), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red-Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA5, 0x2A, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red Devil";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x86, 0x01, 0x11), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red-Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x53, 0x49), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red-Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0x00, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red Salsa";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x3A, 0x4A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Red-Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC7, 0x15, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Redwood";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA4, 0x5A, 0x52), CIE_LAB);
        i++;
        wikipediaNames[i] = "Regalia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x52, 0x2D, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Registration Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Resolution Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x23, 0x87), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rhythm";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x77, 0x76, 0x96), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x40, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Black (FOGRA29)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x01, 0x0B, 0x13), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Black (FOGRA39)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x01, 0x02, 0x03), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Brilliant Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF1, 0xA7, 0xFE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD7, 0x00, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Electric Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x08, 0x92, 0xD0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA7, 0x6B, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Lilac";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB6, 0x66, 0xD2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rich Maroon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB0, 0x30, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rifle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x44, 0x4C, 0x38), CIE_LAB);
        i++;
        wikipediaNames[i] = "Roast Coffee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x42, 0x41), CIE_LAB);
        i++;
        wikipediaNames[i] = "Robin Egg Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xCC, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rocket Metallic";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0x7F, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Roman Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x83, 0x89, 0x96), CIE_LAB);
        i++;
        wikipediaNames[i] = "Root Beer";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x29, 0x0E, 0x05), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Bonbon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF9, 0x42, 0x9E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Dust";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9E, 0x5E, 0x6F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Ebony";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x48, 0x46), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Garnet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x01, 0x45), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB7, 0x6E, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Madder";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x26, 0x36), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x66, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Quartz";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0x98, 0xA9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Quartz Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBD, 0x55, 0x9C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC2, 0x1E, 0x56), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x90, 0x5D, 0x5D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rose Vale";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAB, 0x4E, 0x52), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rosewood";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x65, 0x00, 0x0B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rosso Corsa";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD4, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rosy Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBC, 0x8F, 0x8F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Azure";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x38, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x23, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x41, 0x69, 0xE1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x52, 0x3B, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Fuchsia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCA, 0x2C, 0x92), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x13, 0x62, 0x07), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF9, 0x92, 0x45), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9B, 0x1C, 0x31), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9B, 0x1C, 0x31), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD0, 0x00, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x78, 0x51, 0xA9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Royal Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xDA, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ruber";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCE, 0x46, 0x76), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rubine Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD1, 0x00, 0x56), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ruby";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE0, 0x11, 0x5F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ruby Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9B, 0x11, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ruddy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x28), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ruddy Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBB, 0x65, 0x28), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ruddy Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE1, 0x8E, 0x96), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rufous";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA8, 0x1C, 0x07), CIE_LAB);
        i++;
        wikipediaNames[i] = "Russet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x46, 0x1B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Russian Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x92, 0x67), CIE_LAB);
        i++;
        wikipediaNames[i] = "Russian Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x32, 0x17, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rust";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB7, 0x41, 0x0E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Rusty Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x2C, 0x43), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sacramento State Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x56, 0x3F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Saddle Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0x45, 0x13), CIE_LAB);
        i++;
        wikipediaNames[i] = "Safety Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x78, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Safety Orange (Blaze Orange)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x67, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Safety Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0xD2, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Saffron";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xC4, 0x30), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sage";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBC, 0xB8, 0x8A), CIE_LAB);
        i++;
        wikipediaNames[i] = "St. Patrick's Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x23, 0x29, 0x7A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Salem (Color)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x17, 0x7B, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Salmon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0x80, 0x72), CIE_LAB);
        i++;
        wikipediaNames[i] = "Salmon Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x91, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sand";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC2, 0xB2, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sand Dune";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x71, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sandstorm";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEC, 0xD5, 0x40), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sandy Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xA4, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sandy Tan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0xD9, 0xB5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sandy Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x71, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sangria";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x92, 0x00, 0x0A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sap Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x50, 0x7D, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sapphire";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0F, 0x52, 0xBA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sapphire Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x67, 0xA5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sasquatch Socks";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x46, 0x81), CIE_LAB);
        i++;
        wikipediaNames[i] = "Satin Sheen Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCB, 0xA1, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Scarlet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x24, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Scarlet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x0E, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Schauss Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x91, 0xAF), CIE_LAB);
        i++;
        wikipediaNames[i] = "School Bus Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xD8, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Screamin' Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0xFF, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sea Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x69, 0x94), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sea Foam Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0xE2, 0xBF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sea Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2E, 0x8B, 0x57), CIE_LAB);
        i++;
        //wikipediaNames[i] = "Sea Green (Crayola)"; wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0xCD), CIE_LAB); i++;
        wikipediaNames[i] = "Sea Serpent";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4B, 0xC7, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Seal Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x59, 0x26, 0x0B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Seashell";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF5, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Selective Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xBA, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sepia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x42, 0x14), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shadow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0x79, 0x5D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shadow Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x77, 0x8B, 0xA5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shampoo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCF, 0xF1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shamrock Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x9E, 0x60), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sheen Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8F, 0xD4, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shimmering Blush";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x86, 0x95), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shiny Shamrock";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5F, 0xA7, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shocking Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0x0F, 0xC0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Shocking Pink (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x6F, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sienna";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x2D, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC0, 0xC0, 0xC0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC9, 0xC0, 0xBB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver (Metallic)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAA, 0xA9, 0xAD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver Chalice";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAC, 0xAC, 0xAC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver Foil";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAF, 0xB1, 0xAE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver Lake Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5D, 0x89, 0xBA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC4, 0xAE, 0xAD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Silver Sand";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0xC1, 0xC2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sinopia";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCB, 0x41, 0x0B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sizzling Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x38, 0x55), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sizzling Sunrise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDB, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Skobeloff";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x74, 0x74), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0xCE, 0xEB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sky Blue (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x76, 0xD7, 0xEA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sky Magenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0x71, 0xAF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Slate Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6A, 0x5A, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Slate Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x70, 0x80, 0x90), CIE_LAB);
        i++;
        wikipediaNames[i] = "Slimy Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x29, 0x96, 0x17), CIE_LAB);
        i++;
        wikipediaNames[i] = "Smalt (Dark Powder Blue)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x33, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Smashed Pumpkin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x6D, 0x3A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Smitten";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC8, 0x41, 0x86), CIE_LAB);
        i++;
        wikipediaNames[i] = "Smoke";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0x82, 0x76), CIE_LAB);
        i++;
        wikipediaNames[i] = "Smokey Topaz";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x83, 0x2A, 0x0D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Smoky Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x10, 0x0C, 0x08), CIE_LAB);
        i++;
        wikipediaNames[i] = "Smoky Topaz";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x93, 0x3D, 0x41), CIE_LAB);
        i++;
        wikipediaNames[i] = "Snow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFA, 0xFA), CIE_LAB);
        i++;
        wikipediaNames[i] = "Soap";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCE, 0xC8, 0xEF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Soldier Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x54, 0x5A, 0x2C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Solid Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x89, 0x38, 0x43), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sonic Silver";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x75, 0x75, 0x75), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spartan Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9E, 0x13, 0x16), CIE_LAB);
        i++;
        wikipediaNames[i] = "Space Cadet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1D, 0x29, 0x51), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Bistre";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x75, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x70, 0xB8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Carmine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD1, 0x00, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0x1A, 0x4C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x98, 0x98, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x91, 0x50), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE8, 0x61, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0xBF, 0xBE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x03, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0x00, 0x26), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4C, 0x28, 0x82), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Viridian";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x7F, 0x5C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spanish Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF6, 0xB5, 0x11), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spicy Mix";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0x5F, 0x4D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spiro Disco Ball";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0F, 0xC0, 0xFC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spring Bud";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA7, 0xFC, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spring Frost";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0xFF, 0x2A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spring Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Spring Green (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEC, 0xEB, 0xBD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Star Command Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x7B, 0xB8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Steel Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x46, 0x82, 0xB4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Steel Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x33, 0xCC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Steel Teal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5F, 0x8A, 0x8B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Stil De Grain Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xDA, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Stizza";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Stormcloud";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x4F, 0x66, 0x6A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Straw";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0xD9, 0x6F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Strawberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0x5A, 0x8D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sugar Plum";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x91, 0x4E, 0x75), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sunburnt Cyclops";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x40, 0x4C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sunglow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCC, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sunny";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0xF2, 0x7A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sunray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0xAB, 0x57), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sunset";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xD6, 0xA5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sunset Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x5E, 0x53), CIE_LAB);
        i++;
        wikipediaNames[i] = "Super Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0x6B, 0xA9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Sweet Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA8, 0x37, 0x31), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD2, 0xB4, 0x8C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tangelo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF9, 0x4D, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tangerine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF2, 0x85, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tangerine Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCC, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tango Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE4, 0x71, 0x7A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tart Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFB, 0x4D, 0x46), CIE_LAB);
        i++;
        wikipediaNames[i] = "Taupe";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x48, 0x3C, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Taupe Gray";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8B, 0x85, 0x89), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tea Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD0, 0xF0, 0xC0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tea Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF8, 0x83, 0x79), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tea Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF4, 0xC2, 0xC2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Teal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x80, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Teal Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x36, 0x75, 0x88), CIE_LAB);
        i++;
        wikipediaNames[i] = "Teal Deer";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0xE6, 0xB3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Teal Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x82, 0x7F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Telemagenta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCF, 0x34, 0x76), CIE_LAB);
        i++;
        wikipediaNames[i] = "Temptress";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0x21, 0x26), CIE_LAB);
        i++;
        wikipediaNames[i] = "TennÃ© (Tawny)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0x57, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Terra Cotta";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE2, 0x72, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Thistle";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD8, 0xBF, 0xD8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Thulian Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0x6F, 0xA1), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tickle Me Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0x89, 0xAC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tiffany Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0A, 0xBA, 0xB5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tiger's Eye";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE0, 0x8D, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Timberwolf";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDB, 0xD7, 0xD2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Titanium";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x87, 0x86, 0x81), CIE_LAB);
        i++;
        wikipediaNames[i] = "Titanium Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0xE6, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tomato";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x63, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Toolbox";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x74, 0x6C, 0xC0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Topaz";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xC8, 0x7C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tractor Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x0E, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Trolley Grey";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x80, 0x80, 0x80), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tropical Rain Forest";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x75, 0x5E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tropical Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCD, 0xA4, 0xDE), CIE_LAB);
        i++;
        wikipediaNames[i] = "True Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x73, 0xCF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tufts Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3E, 0x8E, 0xDE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tulip";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x87, 0x8D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tumbleweed";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDE, 0xAA, 0x88), CIE_LAB);
        i++;
        wikipediaNames[i] = "Turkish Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB5, 0x72, 0x81), CIE_LAB);
        i++;
        wikipediaNames[i] = "Turquoise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x40, 0xE0, 0xD0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Turquoise Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xFF, 0xEF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Turquoise Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA0, 0xD6, 0xB4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Turquoise Surf";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xC5, 0xCD), CIE_LAB);
        i++;
        wikipediaNames[i] = "Turtle Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0x9A, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tuscan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFA, 0xD6, 0xA5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tuscan Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x6F, 0x4E, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tuscan Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7C, 0x48, 0x48), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tuscan Tan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0x7B, 0x5B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tuscany";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC0, 0x99, 0x99), CIE_LAB);
        i++;
        wikipediaNames[i] = "Twilight Lavender";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8A, 0x49, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Tyrian Purple";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x02, 0x3C), CIE_LAB);
        i++;
        wikipediaNames[i] = "UA Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x33, 0xAA), CIE_LAB);
        i++;
        wikipediaNames[i] = "UA Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x00, 0x4C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ube";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x88, 0x78, 0xC3), CIE_LAB);
        i++;
        wikipediaNames[i] = "UCLA Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x53, 0x68, 0x95), CIE_LAB);
        i++;
        wikipediaNames[i] = "UCLA Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xB3, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "UE Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBA, 0x00, 0x01), CIE_LAB);
        i++;
        wikipediaNames[i] = "UFO Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3C, 0xD0, 0x70), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ultramarine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x3F, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ultramarine Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x41, 0x66, 0xF5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ultra Pink";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x6F, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Ultra Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0x6C, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Umber";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x63, 0x51, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Unbleached Silk";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDD, 0xCA), CIE_LAB);
        i++;
        wikipediaNames[i] = "United Nations Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x5B, 0x92, 0xE5), CIE_LAB);
        i++;
        wikipediaNames[i] = "University Of California Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB7, 0x87, 0x27), CIE_LAB);
        i++;
        wikipediaNames[i] = "University Of Tennessee Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0x7F, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Unmellow Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0x66), CIE_LAB);
        i++;
        wikipediaNames[i] = "UP Forest Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x01, 0x44, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "UP Maroon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7B, 0x11, 0x13), CIE_LAB);
        i++;
        wikipediaNames[i] = "Upsdell Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xAE, 0x20, 0x29), CIE_LAB);
        i++;
        wikipediaNames[i] = "Urobilin";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE1, 0xAD, 0x21), CIE_LAB);
        i++;
        wikipediaNames[i] = "USAFA Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x4F, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "USC Cardinal";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x99, 0x00, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "USC Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xCC, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Utah Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD3, 0x00, 0x3F), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vampire Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x08, 0x08, 0x08), CIE_LAB);
        i++;
        wikipediaNames[i] = "Van Dyke Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x42, 0x28), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vanilla";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF3, 0xE5, 0xAB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vanilla Ice";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF3, 0x8F, 0xA9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vegas Gold";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC5, 0xB3, 0x58), CIE_LAB);
        i++;
        wikipediaNames[i] = "Venetian Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC8, 0x08, 0x15), CIE_LAB);
        i++;
        wikipediaNames[i] = "Verdigris";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x43, 0xB3, 0xAE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vermilion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE3, 0x42, 0x34), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vermilion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD9, 0x38, 0x1E), CIE_LAB);
        i++;
        wikipediaNames[i] = "Veronica";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA0, 0x20, 0xF0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Verse Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x18, 0x88, 0x0d), CIE_LAB);
        i++;
        wikipediaNames[i] = "Very Light Azure";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x74, 0xBB, 0xFB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Very Light Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x66, 0x66, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Very Light Malachite Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x64, 0xE9, 0x86), CIE_LAB);
        i++;
        wikipediaNames[i] = "Very Light Tangelo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xB0, 0x77), CIE_LAB);
        i++;
        wikipediaNames[i] = "Very Pale Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xDF, 0xBF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Very Pale Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0xBF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x8F, 0x00, 0xFF), CIE_LAB);
        i++;
//        wikipediaNames[i] = "Violet (Color Wheel)"; wikipediaColors[i] = Color.convert(Color.argb(255, 0x7F, 0x00, 0xFF), CIE_LAB); i++;
//        wikipediaNames[i] = "Violet (Crayola)"; wikipediaColors[i] = Color.convert(Color.argb(255, 0x96, 0x3D, 0x7F), CIE_LAB); i++;
        //wikipediaNames[i] = "Violet (RYB)"; wikipediaColors[i] = Color.convert(Color.argb(255, 0x86, 0x01, 0xAF), CIE_LAB); i++;
//        wikipediaNames[i] = "Violet (Web)"; wikipediaColors[i] = Color.convert(Color.argb(255, 0xEE, 0x82, 0xEE), CIE_LAB); i++;
        wikipediaNames[i] = "Violet-Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x32, 0x4A, 0xB2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Violet-Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0x53, 0x94), CIE_LAB);
        i++;
        wikipediaNames[i] = "Violin Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x44, 0x03), CIE_LAB);
        i++;
        wikipediaNames[i] = "Viridian";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x40, 0x82, 0x6D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Viridian Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x96, 0x98), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vista Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7C, 0x9E, 0xD9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Amber";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x99, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Auburn";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x92, 0x27, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Burgundy";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0x1D, 0x35), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Cerise";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDA, 0x1D, 0x81), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Cerulean";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xAA, 0xEE), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Crimson";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x00, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Gamboge";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x99, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Lime Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA6, 0xD6, 0x08), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Malachite";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xCC, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Mulberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB8, 0x0C, 0xE3), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x5F, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Orange Peel";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA0, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Orchid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCC, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Raspberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x6C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF7, 0x0D, 0x1A), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Red-Tangelo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xDF, 0x61, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Sky Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0xCC, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Tangelo";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0x74, 0x27), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Tangerine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xA0, 0x89), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Vermilion";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE5, 0x60, 0x24), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Violet";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9F, 0x00, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Vivid Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xE3, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Volt";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xCE, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wageningen Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x34, 0xB2, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Warm Black";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x42, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Watermelon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF0, 0x5C, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Watermelon Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xBF, 0x41, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Waterspout";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA4, 0xF4, 0xF9), CIE_LAB);
        i++;
        wikipediaNames[i] = "Weldon Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x7C, 0x98, 0xAB), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wenge";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x64, 0x54, 0x52), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wheat";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0xDE, 0xB3), CIE_LAB);
        i++;
        wikipediaNames[i] = "White";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "White Chocolate";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xED, 0xE6, 0xD6), CIE_LAB);
        i++;
        wikipediaNames[i] = "White Coffee";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xE6, 0xE0, 0xD4), CIE_LAB);
        i++;
        wikipediaNames[i] = "White Smoke";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xF5, 0xF5, 0xF5), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wild Blue Yonder";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA2, 0xAD, 0xD0), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wild Orchid";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xD4, 0x70, 0xA2), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wild Strawberry";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x43, 0xA4), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wild Watermelon";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0x6C, 0x85), CIE_LAB);
        i++;
        wikipediaNames[i] = "Willpower Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFD, 0x58, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Windsor Tan";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA7, 0x55, 0x02), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x72, 0x2F, 0x37), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wine Red";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xB1, 0x12, 0x26), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wine Dregs";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x67, 0x31, 0x47), CIE_LAB);
        i++;
        wikipediaNames[i] = "Winter Sky";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0x00, 0x7C), CIE_LAB);
        i++;
        wikipediaNames[i] = "Winter Wizard";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xA0, 0xE6, 0xFF), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wintergreen Dream";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x56, 0x88, 0x7D), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wisteria";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC9, 0xA0, 0xDC), CIE_LAB);
        i++;
        wikipediaNames[i] = "Wood Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xC1, 0x9A, 0x6B), CIE_LAB);
        i++;
        wikipediaNames[i] = "Xanadu";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x73, 0x86, 0x78), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yale Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x0F, 0x4D, 0x92), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yankees Blue";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x1C, 0x28, 0x41), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xFF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow (Crayola)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFC, 0xE8, 0x83), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow (Munsell)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xEF, 0xCC, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow (NCS)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xD3, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow (Pantone)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xDF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow (Process)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xEF, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow (RYB)";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFE, 0xFE, 0x33), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow-Green";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x9A, 0xCD, 0x32), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow Orange";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xAE, 0x42), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow Rose";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF0, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Yellow Sunshine";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0xFF, 0xF7, 0x00), CIE_LAB);
        i++;
        wikipediaNames[i] = "Zaffre";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x00, 0x14, 0xA8), CIE_LAB);
        i++;
        wikipediaNames[i] = "Zinnwaldite Brown";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x2C, 0x16, 0x08), CIE_LAB);
        i++;
        wikipediaNames[i] = "Zomp";
        wikipediaColors[i] = Color.convert(Color.argb(255, 0x39, 0xA7, 0x8E), CIE_LAB);
        i++;

        Log.d("AnalogWatchFace", "Generated!");
    }

    @TargetApi(26)
    private class Tuple {
        private int a, b, c;
        private float x, y, z;

        Tuple(int a, int b, int c) {
            ColorSpace CIE_LAB = ColorSpace.get(ColorSpace.Named.CIE_LAB);
            long color = Color.convert(Color.argb(255, a * 85, b * 85, c * 85), CIE_LAB);

            this.a = a;
            this.b = b;
            this.c = c;
            this.x = Color.red(color);
            this.y = Color.green(color);
            this.z = Color.blue(color);
        }

        Tuple(int a, int b, int c, float x, float y, float z) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
            this.z = z;
        }

        @NonNull
        @Override
        public String toString() {
            int i = 0;
            float best = 9999f;
            {
                for (int j = 0; j < wikipediaColors.length; j++) {
                    float x2 = Color.red(wikipediaColors[j]);
                    float y2 = Color.green(wikipediaColors[j]);
                    float z2 = Color.blue(wikipediaColors[j]);

                    float check = Math.abs(x - x2) + Math.abs(y - y2) + Math.abs(z - z2);
                    if (check < best) {
                        best = check;
                        i = j;
                    }
                }
            }
            ColorSpace CIE_LAB = ColorSpace.get(ColorSpace.Named.CIE_LAB);
            ColorSpace sRGB = ColorSpace.get(ColorSpace.Named.SRGB);
            ColorSpace.RenderIntent intent = ColorSpace.RenderIntent.PERCEPTUAL;
            ColorSpace.Connector connector = ColorSpace.connect(CIE_LAB, sRGB, intent);

            long col = Color.convert(Color.pack(x, y, z, 1.0f, CIE_LAB), connector);

            String group = String.format("0x%06X", (0xFFFFFF & Color.toArgb(col)));

            String[] hexes = new String[]{"00", "55", "AA", "FF"};
            String original = "0x" + hexes[a] + hexes[b] + hexes[c];

            return String.format("{\"a\": %d, \"b\": %d, \"c\": %d, \"group\": \"%s\", \"original\": \"%s\", \"x\": %f, \"y\": %f, \"z\": %f}, --> best match '%s' (distance %f)",
                    a, b, c, group, original, x, y, z, wikipediaNames[i], best);
        }

        public Tuple log() {
            android.util.Log.d("AnalogWatchFace", toString());
            return this;
        }
    }

//    public int getFillColor() {
//        return mFillColor;
//    }
//
//    public int getAccentColor() {
//        return mAccentColor;
//    }

//    @Deprecated
//    public int getHighlightColor() {
//        regeneratePaints2();
//        return preset.getHighlightColor();
//    }

//    public int getBaseColor() {
//        return mBaseColor;
//    }
}
